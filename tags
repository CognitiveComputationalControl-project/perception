!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AFFORDANCES_H	handle_detector/include/handle_detector/affordances.h	33;"	d
ALIGNMENT_DIST_RADIUS	handle_detector/include/handle_detector/affordances.h	/^		static const double ALIGNMENT_DIST_RADIUS; \/\/ distance threshold$/;"	m	class:Affordances
ALIGNMENT_DIST_RADIUS	handle_detector/src/affordances.cpp	/^const double Affordances::ALIGNMENT_DIST_RADIUS = 0.02;$/;"	m	class:Affordances	file:
ALIGNMENT_MIN_INLIERS	handle_detector/include/handle_detector/affordances.h	/^		static const int ALIGNMENT_MIN_INLIERS; \/\/ min. number of inliers for colinear cylinder set$/;"	m	class:Affordances
ALIGNMENT_MIN_INLIERS	handle_detector/src/affordances.cpp	/^const int Affordances::ALIGNMENT_MIN_INLIERS = 10;$/;"	m	class:Affordances	file:
ALIGNMENT_ORIENT_RADIUS	handle_detector/include/handle_detector/affordances.h	/^		static const double ALIGNMENT_ORIENT_RADIUS; \/\/ orientation threshold$/;"	m	class:Affordances
ALIGNMENT_ORIENT_RADIUS	handle_detector/src/affordances.cpp	/^const double Affordances::ALIGNMENT_ORIENT_RADIUS = 0.1;$/;"	m	class:Affordances	file:
ALIGNMENT_RADIUS_RADIUS	handle_detector/include/handle_detector/affordances.h	/^		static const double ALIGNMENT_RADIUS_RADIUS; \/\/ radius threshold$/;"	m	class:Affordances
ALIGNMENT_RADIUS_RADIUS	handle_detector/src/affordances.cpp	/^const double Affordances::ALIGNMENT_RADIUS_RADIUS = 0.003;$/;"	m	class:Affordances	file:
ALIGNMENT_RUNS	handle_detector/include/handle_detector/affordances.h	/^		static const int ALIGNMENT_RUNS; \/\/ number of RANSAC runs$/;"	m	class:Affordances
ALIGNMENT_RUNS	handle_detector/src/affordances.cpp	/^const int Affordances::ALIGNMENT_RUNS = 3;$/;"	m	class:Affordances	file:
Affordances	handle_detector/include/handle_detector/affordances.h	/^class Affordances$/;"	c
CURVATURE_ESTIMATOR	handle_detector/include/handle_detector/affordances.h	/^		static const int CURVATURE_ESTIMATOR; \/\/ curvature axis estimation method$/;"	m	class:Affordances
CURVATURE_ESTIMATOR	handle_detector/src/affordances.cpp	/^const int Affordances::CURVATURE_ESTIMATOR = 0;$/;"	m	class:Affordances	file:
CURVATURE_ESTIMATORS	handle_detector/src/affordances.cpp	/^const std::string CURVATURE_ESTIMATORS[] = {"Taubin", "PCA", "Normals"};$/;"	v
CYLINDRICAL_SHELL_H	handle_detector/include/handle_detector/cylindrical_shell.h	33;"	d
Calibrator	vision_visp/visp_camera_calibration/src/calibrator.cpp	/^  Calibrator::Calibrator() :$/;"	f	class:visp_camera_calibration::Calibrator
Calibrator	vision_visp/visp_camera_calibration/src/calibrator.h	/^  class Calibrator$/;"	c	namespace:visp_camera_calibration
Calibrator	vision_visp/visp_hand2eye_calibration/src/calibrator.cpp	/^  Calibrator::Calibrator() :$/;"	f	class:visp_hand2eye_calibration::Calibrator
Calibrator	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^  class Calibrator{$/;"	c	namespace:visp_hand2eye_calibration
Camera	vision_visp/visp_camera_calibration/src/camera.cpp	/^Camera::Camera() :$/;"	f	class:visp_camera_calibration::Camera
Camera	vision_visp/visp_camera_calibration/src/camera.h	/^class Camera$/;"	c	namespace:visp_camera_calibration
Client	vision_visp/visp_hand2eye_calibration/src/client.cpp	/^Client::Client()$/;"	f	class:visp_hand2eye_calibration::Client
Client	vision_visp/visp_hand2eye_calibration/src/client.h	/^  class Client{$/;"	c	namespace:visp_hand2eye_calibration
CmdLine	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^CmdLine:: CmdLine() : should_exit_(false), code_message_index_(0) {$/;"	f	class:CmdLine
CmdLine	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^CmdLine:: CmdLine(int argc,char**argv) : should_exit_(false), code_message_index_(0) {$/;"	f	class:CmdLine
CmdLine	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^CmdLine:: CmdLine(std::string& config_file) : should_exit_(false), code_message_index_(0) {$/;"	f	class:CmdLine
CmdLine	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^class CmdLine{$/;"	c
ColorHandlerT	object_registration/src/object_localize_service.cpp	/^typedef pcl::visualization::PointCloudColorHandlerCustom<PointNT> ColorHandlerT;$/;"	t	file:
CurvatureEstimationTaubin	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  CurvatureEstimationTaubin(unsigned int num_threads = 0)$/;"	f	class:pcl::CurvatureEstimationTaubin
CurvatureEstimationTaubin	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^class CurvatureEstimationTaubin : public Feature<PointInT, PointOutT>$/;"	c	namespace:pcl
CylindricalShell	handle_detector/include/handle_detector/cylindrical_shell.h	/^class CylindricalShell$/;"	c
DEFAULT_PC_NAME	object_registration/src/interest_box_marker.cpp	28;"	d	file:
DEFAULT_POINTCLOUD_SUB	object_registration/src/interest_box_marker.cpp	24;"	d	file:
DETECTOR_TYPE	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  enum DETECTOR_TYPE{$/;"	g	class:CmdLine
DMTX	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^    DMTX, ZBAR$/;"	e	enum:CmdLine::DETECTOR_TYPE
DetectFlashcode	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^  struct DetectFlashcode: public DetectFlashcodeGeneric {$/;"	s	namespace:tracking
DetectFlashcodeGeneric	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^  struct DetectFlashcodeGeneric : public msm::front::state<>$/;"	s	namespace:tracking
DetectModel	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      DetectModel() : model_inner_corner(4),model_outer_corner(4){}$/;"	f	struct:tracking::DetectModel
DetectModel	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^  struct DetectModel : public msm::front::state<>$/;"	s	namespace:tracking
Detector	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/datamatrix/detector.cpp	/^  Detector::Detector(){$/;"	f	class:detectors::datamatrix::Detector
Detector	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/datamatrix/detector.h	/^  class Detector : public DetectorBase{$/;"	c	namespace:detectors::datamatrix
Detector	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/qrcode/detector.cpp	/^  Detector::Detector(){$/;"	f	class:detectors::qrcode::Detector
Detector	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/qrcode/detector.h	/^  class Detector : public DetectorBase{$/;"	c	namespace:detectors::qrcode
DetectorBase	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/detector_base.h	/^  class DetectorBase{$/;"	c	namespace:detectors
DoorHandleDetectionNode	door_handle_detection/include/door_handle_detection.h	/^class DoorHandleDetectionNode$/;"	c
DoorHandleDetectionNode	door_handle_detection/src/door_handle_detection.cpp	/^DoorHandleDetectionNode::DoorHandleDetectionNode(ros::NodeHandle nh)$/;"	f	class:DoorHandleDetectionNode
EIGEN_ALIGN16	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^}EIGEN_ALIGN16;$/;"	m	namespace:pcl	typeref:struct:pcl::PointCurvatureTaubin
EIGEN_DONT_PARALLELIZE	handle_detector/src/importance_sampling.cpp	27;"	d	file:
EIGEN_DONT_PARALLELIZE	handle_detector/src/localization.cpp	26;"	d	file:
FOVW	handle_tracking/include/object_scan.h	40;"	d
FeatureCloudT	object_registration/src/object_localize_service.cpp	/^typedef pcl::PointCloud<FeatureT> FeatureCloudT;$/;"	t	file:
FeatureEstimationT	object_registration/src/object_localize_service.cpp	/^typedef pcl::FPFHEstimationOMP<PointNT,PointNT,FeatureT> FeatureEstimationT;$/;"	t	file:
FeatureT	object_registration/src/object_localize_service.cpp	/^typedef pcl::FPFHSignature33 FeatureT;$/;"	t	file:
Finished	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^  struct Finished : public msm::front::state<>{$/;"	s	namespace:tracking
Gaze_activate_pub	handle_tracking/include/object_scan.h	/^	ros::Publisher Gaze_activate_pub;$/;"	m	class:Handle_manager
Gaze_point_pub	handle_tracking/include/object_scan.h	/^	ros::Publisher Gaze_point_pub;$/;"	m	class:Handle_manager
HANDLE_GAP	handle_detector/include/handle_detector/affordances.h	/^		static const double HANDLE_GAP; \/\/ min. gap around affordances$/;"	m	class:Affordances
HANDLE_GAP	handle_detector/src/affordances.cpp	/^const double Affordances::HANDLE_GAP = 0.08;$/;"	m	class:Affordances	file:
Handle_manager	handle_tracking/include/object_scan.h	/^class Handle_manager{$/;"	c
Handle_manager	handle_tracking/src/object_scan.cpp	/^Handle_manager::Handle_manager()$/;"	f	class:Handle_manager
Head_Pos	handle_tracking/include/object_scan.h	/^	std::vector<double> Head_Pos;				\/\/x,y,theta$/;"	m	class:Handle_manager
Human_MarkerarrayCallback	handle_tracking/src/object_scan.cpp	/^void Handle_manager::Human_MarkerarrayCallback(const visualization_msgs::MarkerArray::ConstPtr& msg)$/;"	f	class:Handle_manager
I	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/events.h	/^    vpImage<vpRGBa>& I;$/;"	m	struct:tracking::input_ready
I	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/events.h	/^    vpImage<vpRGBa>& I;$/;"	m	struct:tracking::select_input
I_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    vpImage<vpRGBa> *I_;$/;"	m	class:tracking::Tracker_
I_	vision_visp/visp_auto_tracker/src/node.h	/^                vpImage<vpRGBa> I_; \/\/ Image used for debug display$/;"	m	class:visp_auto_tracker::Node
Igray_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    vpImage<unsigned char> Igray_;$/;"	m	class:tracking::Tracker_
ImageProcessing	vision_visp/visp_camera_calibration/src/image_processing.cpp	/^ImageProcessing::ImageProcessing() :$/;"	f	class:visp_camera_calibration::ImageProcessing
ImageProcessing	vision_visp/visp_camera_calibration/src/image_processing.h	/^class ImageProcessing$/;"	c	namespace:visp_camera_calibration
KLT	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^    KLT, MBT, KLT_MBT$/;"	e	enum:CmdLine::TRACKER_TYPE
KLT_MBT	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^    KLT, MBT, KLT_MBT$/;"	e	enum:CmdLine::TRACKER_TYPE
Keyboard	ros-keyboard/src/keyboard.cpp	/^keyboard::Keyboard::Keyboard( int repeat_delay, int repeat_interval )$/;"	f	class:keyboard::Keyboard
Keyboard	ros-keyboard/src/keyboard.h	/^  class Keyboard {$/;"	c	namespace:keyboard
LASER_ANGLE_MAX	handle_tracking/include/object_scan.h	59;"	d
LASER_ANGLE_MIN	handle_tracking/include/object_scan.h	58;"	d
LASER_ANGLE_RES	handle_tracking/include/object_scan.h	52;"	d
LASER_ANGLE_STEP	handle_tracking/include/object_scan.h	60;"	d
LASER_Data_Length	handle_tracking/include/object_scan.h	53;"	d
LASER_Dist_person	handle_tracking/include/object_scan.h	55;"	d
LASER_Point_Step	handle_tracking/include/object_scan.h	54;"	d
LOST	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^	LOST$/;"	e	enum:visp_tracker::Tracker::State
LogFileWriter	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/logfilewriter.hpp	/^    LogFileWriter(std::ofstream& file) : file_(file){$/;"	f	class:tracking::LogFileWriter
LogFileWriter	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/logfilewriter.hpp	/^  class LogFileWriter{$/;"	c	namespace:tracking
MARKER_FRAME	object_registration/src/interest_box_marker.cpp	21;"	d	file:
MARKER_NAME	object_registration/src/interest_box_marker.cpp	22;"	d	file:
MATH_PI	handle_tracking/include/object_scan.h	41;"	d
MAX	handle_detector/src/sampling.cpp	/^const int MAX = 2;$/;"	v
MAX_NUM_IN_FRONT	handle_detector/include/handle_detector/affordances.h	/^		static const int MAX_NUM_IN_FRONT; \/\/ max. threshold of allowed points in front of a neighborhood center point (occlusion filtering)$/;"	m	class:Affordances
MAX_NUM_IN_FRONT	handle_detector/src/affordances.cpp	/^const int Affordances::MAX_NUM_IN_FRONT = 20;$/;"	m	class:Affordances	file:
MAX_RANGE	handle_detector/include/handle_detector/affordances.h	/^		static const double MAX_RANGE; \/\/ max. range of robot arms$/;"	m	class:Affordances
MAX_RANGE	handle_detector/src/affordances.cpp	/^const double Affordances::MAX_RANGE = 1.0;$/;"	m	class:Affordances	file:
MAX_UPDATE_ITER	handle_tracking/include/object_scan.h	50;"	d
MAX_VIEW_UPDATE_ITER	handle_tracking/include/object_scan.h	51;"	d
MBT	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^    KLT, MBT, KLT_MBT$/;"	e	enum:CmdLine::TRACKER_TYPE
MESSAGES_H	handle_detector/include/handle_detector/messages.h	33;"	d
METHOD	handle_detector/include/handle_detector/sampling.h	/^  static const int METHOD;$/;"	m	class:Sampling
METHOD	handle_detector/src/sampling.cpp	/^const int Sampling::METHOD = SUM;$/;"	m	class:Sampling	file:
MarkerArray	handle_detector/include/handle_detector/visualizer.h	/^typedef visualization_msgs::MarkerArray MarkerArray;$/;"	t
MarkerArray	handle_detector/src/visualizer.cpp	/^typedef visualization_msgs::MarkerArray MarkerArray;$/;"	t	file:
Messages	handle_detector/include/handle_detector/messages.h	/^class Messages$/;"	c
NEIGHBOR_RADIUS	handle_detector/include/handle_detector/affordances.h	/^		static const double NEIGHBOR_RADIUS;$/;"	m	class:Affordances
NEIGHBOR_RADIUS	handle_detector/src/affordances.cpp	/^const double Affordances::NEIGHBOR_RADIUS = 0.025;$/;"	m	class:Affordances	file:
NORMALS	handle_detector/src/affordances.cpp	/^const int NORMALS = 2;$/;"	v
NUM_INIT_SAMPLES	handle_detector/include/handle_detector/sampling.h	/^  static const int NUM_INIT_SAMPLES;$/;"	m	class:Sampling
NUM_INIT_SAMPLES	handle_detector/src/sampling.cpp	/^const int Sampling::NUM_INIT_SAMPLES = 100;$/;"	m	class:Sampling	file:
NUM_ITERATIONS	handle_detector/include/handle_detector/sampling.h	/^  static const int NUM_ITERATIONS;$/;"	m	class:Sampling
NUM_ITERATIONS	handle_detector/src/sampling.cpp	/^const int Sampling::NUM_ITERATIONS = 10;$/;"	m	class:Sampling	file:
NUM_NEAREST_NEIGHBORS	handle_detector/include/handle_detector/affordances.h	/^		static const int NUM_NEAREST_NEIGHBORS; \/\/ number of nearest neighbors to be found$/;"	m	class:Affordances
NUM_NEAREST_NEIGHBORS	handle_detector/src/affordances.cpp	/^const int Affordances::NUM_NEAREST_NEIGHBORS = 500;$/;"	m	class:Affordances	file:
NUM_SAMPLES	handle_detector/include/handle_detector/affordances.h	/^		static const int NUM_SAMPLES; \/\/ number of neighborhoods$/;"	m	class:Affordances
NUM_SAMPLES	handle_detector/include/handle_detector/sampling.h	/^  static const int NUM_SAMPLES;$/;"	m	class:Sampling
NUM_SAMPLES	handle_detector/src/affordances.cpp	/^const int Affordances::NUM_SAMPLES = 5000;$/;"	m	class:Affordances	file:
NUM_SAMPLES	handle_detector/src/sampling.cpp	/^const int Sampling::NUM_SAMPLES = 100;$/;"	m	class:Sampling	file:
Node	vision_visp/visp_auto_tracker/src/node.cpp	/^        Node::Node() :$/;"	f	class:visp_auto_tracker::Node
Node	vision_visp/visp_auto_tracker/src/node.h	/^        class Node{$/;"	c	namespace:visp_auto_tracker
OnceTargeted	handle_tracking/include/object_scan.h	/^	bool OnceTargeted;$/;"	m	class:Handle_manager
PACKAGE	vision_visp/visp_tracker/cfg/ModelBasedSettings.cfg	/^PACKAGE='visp_tracker'$/;"	v
PACKAGE	vision_visp/visp_tracker/cfg/ModelBasedSettingsEdge.cfg	/^PACKAGE='visp_tracker'$/;"	v
PACKAGE	vision_visp/visp_tracker/cfg/ModelBasedSettingsKlt.cfg	/^PACKAGE='visp_tracker'$/;"	v
PCA	handle_detector/src/affordances.cpp	/^const int PCA = 1;$/;"	v
PCL_FEATURES_CURVATURE_ESTIMATION_TAUBIN_H_	handle_detector/include/handle_detector/curvature_estimation_taubin.h	33;"	d
PCL_FEATURES_IMPL_CURVATURE_ESTIMATION_TAUBIN_HPP_	handle_detector/include/handle_detector/curvature_estimation_taubin.hpp	2;"	d
PCL_VISUALIZE	object_registration/src/object_localize_service.cpp	33;"	d	file:
POINTCLOUD_PUB_NAME	object_registration/src/interest_box_marker.cpp	25;"	d	file:
PROB_RAND_SAMPLES	handle_detector/include/handle_detector/sampling.h	/^  static const double PROB_RAND_SAMPLES;$/;"	m	class:Sampling
PROB_RAND_SAMPLES	handle_detector/src/sampling.cpp	/^const double Sampling::PROB_RAND_SAMPLES = 0.2;$/;"	m	class:Sampling	file:
P_H	handle_tracking/include/object_scan.h	42;"	d
P_S_given_H	handle_tracking/include/object_scan.h	43;"	d
P_S_given_Hc	handle_tracking/include/object_scan.h	44;"	d
P_Sc_given_H	handle_tracking/include/object_scan.h	46;"	d
P_Sc_given_Hc	handle_tracking/include/object_scan.h	47;"	d
PointCloud	handle_detector/include/handle_detector/affordances.h	/^typedef pcl::PointCloud<pcl::PointXYZ> PointCloud;$/;"	t
PointCloud	handle_detector/include/handle_detector/cylindrical_shell.h	/^typedef pcl::PointCloud<pcl::PointXYZ> PointCloud;$/;"	t
PointCloud	handle_detector/include/handle_detector/sampling.h	/^typedef pcl::PointCloud<pcl::PointXYZ> PointCloud;$/;"	t
PointCloud	handle_detector/include/handle_detector/sampling_visualizer.h	/^typedef pcl::PointCloud<pcl::PointXYZ> PointCloud;$/;"	t
PointCloud	handle_detector/include/handle_detector/visualizer.h	/^typedef pcl::PointCloud<pcl::PointXYZ> PointCloud;$/;"	t
PointCloud	handle_detector/src/affordances.cpp	/^typedef pcl::PointCloud<pcl::PointXYZ> PointCloud;$/;"	t	file:
PointCloud	handle_detector/src/importance_sampling.cpp	/^typedef pcl::PointCloud<pcl::PointXYZ> PointCloud;$/;"	t	file:
PointCloud	handle_detector/src/localization.cpp	/^typedef pcl::PointCloud<pcl::PointXYZ> PointCloud;$/;"	t	file:
PointCloud	handle_detector/src/visualizer.cpp	/^typedef pcl::PointCloud<pcl::PointXYZ> PointCloud;$/;"	t	file:
PointCloudOut	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  typedef typename Feature<PointInT, PointOutT>::PointCloudOut PointCloudOut;$/;"	t	class:pcl::CurvatureEstimationTaubin
PointCloudRGB	handle_detector/include/handle_detector/affordances.h	/^typedef pcl::PointCloud<pcl::PointXYZRGB> PointCloudRGB;$/;"	t
PointCloudRGB	handle_detector/include/handle_detector/sampling.h	/^typedef pcl::PointCloud<pcl::PointXYZRGB> PointCloudRGB;$/;"	t
PointCloudRGB	handle_detector/include/handle_detector/sampling_visualizer.h	/^typedef pcl::PointCloud<pcl::PointXYZRGB> PointCloudRGB;$/;"	t
PointCloudRGB	handle_detector/src/importance_sampling.cpp	/^typedef pcl::PointCloud<pcl::PointXYZRGB> PointCloudRGB;$/;"	t	file:
PointCloudRGB	object_registration/src/interest_box_marker.cpp	/^typedef pcl::PointCloud<PointRGB> PointCloudRGB;$/;"	t	file:
PointCloudT	door_recognition/src/findit.cpp	/^typedef pcl::PointCloud<PointNT> PointCloudT;$/;"	t	file:
PointCloudT	object_registration/src/object_localize_service.cpp	/^typedef pcl::PointCloud<PointNT> PointCloudT;$/;"	t	file:
PointCloudT	object_registration/test/test_object_localize_service.cpp	/^typedef pcl::PointCloud<PointNT> PointCloudT;$/;"	t	file:
PointCurvatureTaubin	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^struct PointCurvatureTaubin$/;"	s	namespace:pcl
PointNT	door_recognition/src/findit.cpp	/^typedef pcl::PointXYZRGB PointNT;$/;"	t	file:
PointNT	object_registration/src/object_localize_service.cpp	/^typedef pcl::PointNormal PointNT;$/;"	t	file:
PointNT	object_registration/test/test_object_localize_service.cpp	/^typedef pcl::PointXYZRGB PointNT;$/;"	t	file:
PointRGB	object_registration/src/interest_box_marker.cpp	/^typedef pcl::PointXYZRGB PointRGB;$/;"	t	file:
RADIUS_ERROR	handle_detector/include/handle_detector/affordances.h	/^		static const double RADIUS_ERROR; \/\/ allowed deviation from target radius$/;"	m	class:Affordances
RADIUS_ERROR	handle_detector/src/affordances.cpp	/^const double Affordances::RADIUS_ERROR = 0.013;$/;"	m	class:Affordances	file:
RANGE_SENSOR_FRAME	handle_detector/src/importance_sampling.cpp	/^const std::string RANGE_SENSOR_FRAME = "\/camera_rgb_optical_frame";$/;"	v
RANGE_SENSOR_FRAME	handle_detector/src/localization.cpp	/^const std::string RANGE_SENSOR_FRAME = "head_rgbd_sensor_rgb_frame";$/;"	v
RANGE_SENSOR_TOPIC	handle_detector/src/importance_sampling.cpp	/^const std::string RANGE_SENSOR_TOPIC = "\/camera\/depth_registered\/points";$/;"	v
RANGE_SENSOR_TOPIC	handle_detector/src/localization.cpp	/^const std::string RANGE_SENSOR_TOPIC = "\/hsrb\/head_rgbd_sensor\/depth_registered\/rectified_points";$/;"	v
ReDetectFlashcode	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^  struct ReDetectFlashcode: public DetectFlashcodeGeneric {$/;"	s	namespace:tracking
Robot_Pos	handle_tracking/include/object_scan.h	/^	std::vector<double> Robot_Pos;				\/\/x,y,theta$/;"	m	class:Handle_manager
SAMPLING_H	handle_detector/include/handle_detector/sampling_visualizer.h	33;"	d
SAMPLING_H_	handle_detector/include/handle_detector/sampling.h	33;"	d
STORED_CLOUD_PUB_NAME	object_registration/src/interest_box_marker.cpp	26;"	d	file:
SUM	handle_detector/src/sampling.cpp	/^const int SUM = 1;$/;"	v
Same_POS_diff	handle_tracking/include/object_scan.h	49;"	d
Sampling	handle_detector/include/handle_detector/sampling.h	/^class Sampling$/;"	c
SamplingVisualizer	handle_detector/include/handle_detector/sampling_visualizer.h	/^class SamplingVisualizer$/;"	c
State	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    enum State$/;"	g	class:visp_tracker::Tracker
TARGET_RADIUS	handle_detector/include/handle_detector/affordances.h	/^		static const double TARGET_RADIUS; \/\/ approx. radius of the target handle$/;"	m	class:Affordances
TARGET_RADIUS	handle_detector/src/affordances.cpp	/^const double Affordances::TARGET_RADIUS = 0.08;$/;"	m	class:Affordances	file:
TAUBIN	handle_detector/src/affordances.cpp	/^const int TAUBIN = 0;$/;"	v
TAUBIN_MATRICES_SIZE	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^const int TAUBIN_MATRICES_SIZE = 10;$/;"	m	namespace:pcl
TRACKER_TYPE	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  enum TRACKER_TYPE{$/;"	g	class:CmdLine
TRACKING	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^	TRACKING,$/;"	e	enum:visp_tracker::Tracker::State
TrackModel	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    TrackModel() : plot_(NULL),iter_(0){}$/;"	f	class:tracking::TrackModel
TrackModel	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^  class TrackModel : public msm::front::state<>$/;"	c	namespace:tracking
Tracker	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^  typedef msm::back::state_machine<Tracker_> Tracker;$/;"	t	namespace:tracking
Tracker	vision_visp/visp_tracker/src/libvisp_tracker/tracker.cpp	/^  Tracker::Tracker(ros::NodeHandle& nh,$/;"	f	class:visp_tracker::Tracker
Tracker	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^  class Tracker$/;"	c	namespace:visp_tracker
TrackerClient	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::TrackerClient(ros::NodeHandle& nh,$/;"	f	class:visp_tracker::TrackerClient
TrackerClient	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^  class TrackerClient$/;"	c	namespace:visp_tracker
TrackerClientNodelet	vision_visp/visp_tracker/src/nodelets/client.cpp	/^    TrackerClientNodelet ()$/;"	f	class:visp_tracker::TrackerClientNodelet
TrackerClientNodelet	vision_visp/visp_tracker/src/nodelets/client.cpp	/^  class TrackerClientNodelet : public nodelet::Nodelet$/;"	c	namespace:visp_tracker	file:
TrackerNodelet	vision_visp/visp_tracker/src/nodelets/tracker.cpp	/^    TrackerNodelet ()$/;"	f	class:visp_tracker::TrackerNodelet
TrackerNodelet	vision_visp/visp_tracker/src/nodelets/tracker.cpp	/^  class TrackerNodelet : public nodelet::Nodelet$/;"	c	namespace:visp_tracker	file:
TrackerThread	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/threading.cpp	/^TrackerThread::TrackerThread(tracking::Tracker& tracker) : tracker_(tracker){$/;"	f	class:TrackerThread
TrackerThread	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/threading.h	/^class TrackerThread{$/;"	c
TrackerViewer	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^  TrackerViewer::TrackerViewer(ros::NodeHandle& nh,$/;"	f	class:visp_tracker::TrackerViewer
TrackerViewer	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^  class TrackerViewer$/;"	c	namespace:visp_tracker
TrackerViewerNodelet	vision_visp/visp_tracker/src/nodelets/viewer.cpp	/^    TrackerViewerNodelet ()$/;"	f	class:visp_tracker::TrackerViewerNodelet
TrackerViewerNodelet	vision_visp/visp_tracker/src/nodelets/viewer.cpp	/^  class TrackerViewerNodelet : public nodelet::Nodelet$/;"	c	namespace:visp_tracker	file:
Tracker_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  Tracker_:: Tracker_(CmdLine& cmd, detectors::DetectorBase* detector,vpMbTracker* tracker,bool flush_display) :$/;"	f	class:tracking::Tracker_
Tracker_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^  class Tracker_ : public msm::front::state_machine_def<Tracker_>{$/;"	c	namespace:tracking
USE_CLEARANCE_FILTER	handle_detector/include/handle_detector/affordances.h	/^		static const bool USE_CLEARANCE_FILTER; \/\/ whether the clearance filter is used$/;"	m	class:Affordances
USE_CLEARANCE_FILTER	handle_detector/src/affordances.cpp	/^const bool Affordances::USE_CLEARANCE_FILTER = true;$/;"	m	class:Affordances	file:
USE_OCCLUSION_FILTER	handle_detector/include/handle_detector/affordances.h	/^		static const bool USE_OCCLUSION_FILTER; \/\/ whether the occlusion filter is used$/;"	m	class:Affordances
USE_OCCLUSION_FILTER	handle_detector/src/affordances.cpp	/^const bool Affordances::USE_OCCLUSION_FILTER = true;$/;"	m	class:Affordances	file:
VISP_TRACKER_CALLBACKS_HH	vision_visp/visp_tracker/src/libvisp_tracker/callbacks.hh	2;"	d
VISP_TRACKER_CONVERSION_HH	vision_visp/visp_tracker/src/libvisp_tracker/conversion.hh	2;"	d
VISP_TRACKER_FILE_HH	vision_visp/visp_tracker/src/libvisp_tracker/file.hh	2;"	d
VISP_TRACKER_NAMES_HH	vision_visp/visp_tracker/src/libvisp_tracker/names.hh	2;"	d
VISP_TRACKER_TRACKER_CLIENT_HH	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	2;"	d
VISP_TRACKER_TRACKER_HH	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	2;"	d
VISP_TRACKER_TRACKER_VIEWER_HH	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	2;"	d
VISUALIZER_H	handle_detector/include/handle_detector/visualizer.h	33;"	d
VISUALIZE_STEPS	handle_detector/include/handle_detector/sampling.h	/^  static const bool VISUALIZE_STEPS;$/;"	m	class:Sampling
VISUALIZE_STEPS	handle_detector/src/sampling.cpp	/^const bool Sampling::VISUALIZE_STEPS = false;$/;"	m	class:Sampling	file:
Visualizer	handle_detector/include/handle_detector/visualizer.h	/^class Visualizer$/;"	c
Visualizer	handle_detector/src/visualizer.cpp	/^Visualizer::Visualizer(double marker_lifetime)$/;"	f	class:Visualizer
WAITING_FOR_INITIALIZATION	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^	WAITING_FOR_INITIALIZATION,$/;"	e	enum:visp_tracker::Tracker::State
WORKSPACE_MAX	handle_detector/include/handle_detector/affordances.h	/^		static const double WORKSPACE_MAX;$/;"	m	class:Affordances
WORKSPACE_MAX	handle_detector/src/affordances.cpp	/^const double Affordances::WORKSPACE_MAX = 1.0;$/;"	m	class:Affordances	file:
WORKSPACE_MIN	handle_detector/include/handle_detector/affordances.h	/^		static const double WORKSPACE_MIN;$/;"	m	class:Affordances
WORKSPACE_MIN	handle_detector/src/affordances.cpp	/^const double Affordances::WORKSPACE_MIN = -1.0;$/;"	m	class:Affordances	file:
WaitingForInput	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^  struct WaitingForInput : public msm::front::state<>{$/;"	s	namespace:tracking
WorkspaceLimits	handle_detector/include/handle_detector/affordances.h	/^struct WorkspaceLimits$/;"	s
X_SIZE_ARROW_1	object_registration/src/interest_box_marker.cpp	30;"	d	file:
Y_SIZE_ARROW_1	object_registration/src/interest_box_marker.cpp	31;"	d	file:
ZBAR	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^    DMTX, ZBAR$/;"	e	enum:CmdLine::DETECTOR_TYPE
Z_SIZE_ARROW_1	object_registration/src/interest_box_marker.cpp	32;"	d	file:
_I	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    vpImage<vpRGBa> *_I;$/;"	m	class:tracking::Tracker_
_VISP_BRIDGE_3DPOSE_H_	vision_visp/visp_bridge/include/visp_bridge/3dpose.h	56;"	d
_VISP_BRIDGE_CAMERA_H_	vision_visp/visp_bridge/include/visp_bridge/camera.h	54;"	d
__CMD_LINE_H__	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	2;"	d
__DETECTOR_BASE_H__	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/detector_base.h	2;"	d
__DMDETECTOR_H__	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/datamatrix/detector.h	2;"	d
__DOOR_HANDLE_DETECTION_H__	door_handle_detection/include/door_handle_detection.h	2;"	d
__EVENTS_H__	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	2;"	d
__LOGFILEWRITER_H__	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/logfilewriter.hpp	2;"	d
__QRDETECTOR_H__	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/qrcode/detector.h	2;"	d
__QUATERNIONVECTOR_H__	vision_visp/visp_bridge/include/visp_bridge/vpQuaternionVector.h	45;"	d
__ROS_KEYBOARD_H__	ros-keyboard/src/keyboard.h	2;"	d
__TEVENTS_H__	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/events.h	2;"	d
__THREADING_H__	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/threading.h	2;"	d
__TRACKING_H__	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	2;"	d
__VISP_AUTO_TRACKER_NAMES_H__	vision_visp/visp_auto_tracker/src/names.h	2;"	d
__VISP_AUTO_TRACKER_NODE_H__	vision_visp/visp_auto_tracker/src/node.h	2;"	d
__VISP_BRIDGE_IMAGE_H__	vision_visp/visp_bridge/include/visp_bridge/image.h	54;"	d
__visp_camera_calibration_CALIBRATOR_H__	vision_visp/visp_camera_calibration/src/calibrator.h	59;"	d
__visp_camera_calibration_CAMERA_H__	vision_visp/visp_camera_calibration/src/camera.h	56;"	d
__visp_camera_calibration_IMAGE_PROCESSING_H__	vision_visp/visp_camera_calibration/src/image_processing.h	61;"	d
__visp_hand2eye_calibration_CALIBRATOR_H__	vision_visp/visp_hand2eye_calibration/src/calibrator.h	51;"	d
__visp_hand2eye_calibration_CLIENT_H__	vision_visp/visp_hand2eye_calibration/src/client.h	51;"	d
__visp_hand2eye_calibration_NAMES_H__	vision_visp/visp_camera_calibration/src/names.h	51;"	d
__visp_hand2eye_calibration_NAMES_H__	vision_visp/visp_hand2eye_calibration/src/names.h	51;"	d
a	door_recognition/src/findit.cpp	/^int a=0;$/;"	v
addCylinders	handle_detector/src/sampling_visualizer.cpp	/^void SamplingVisualizer::addCylinders(const std::vector<CylindricalShell> &shells, void* viewer_void,$/;"	f	class:SamplingVisualizer
adhoc_recovery_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  bool adhoc_recovery_;$/;"	m	class:CmdLine
adhoc_recovery_display_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  bool adhoc_recovery_display_;$/;"	m	class:CmdLine
adhoc_recovery_ratio_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  double adhoc_recovery_ratio_;$/;"	m	class:CmdLine
adhoc_recovery_size_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  double adhoc_recovery_size_;$/;"	m	class:CmdLine
adhoc_recovery_treshold_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  unsigned int adhoc_recovery_treshold_;$/;"	m	class:CmdLine
affordances	handle_detector/include/handle_detector/sampling.h	/^  Affordances affordances;$/;"	m	class:Sampling
alignment_dist_radius	handle_detector/include/handle_detector/affordances.h	/^		double alignment_dist_radius;$/;"	m	class:Affordances
alignment_min_inliers	handle_detector/include/handle_detector/affordances.h	/^		int alignment_min_inliers;$/;"	m	class:Affordances
alignment_orient_radius	handle_detector/include/handle_detector/affordances.h	/^		double alignment_orient_radius;$/;"	m	class:Affordances
alignment_radius_radius	handle_detector/include/handle_detector/affordances.h	/^		double alignment_radius_radius;$/;"	m	class:Affordances
alignment_runs	handle_detector/include/handle_detector/affordances.h	/^		int alignment_runs;$/;"	m	class:Affordances
bInitPath_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    boost::filesystem::path bInitPath_;$/;"	m	class:visp_tracker::TrackerClient
bModelPath_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    boost::filesystem::path bModelPath_;$/;"	m	class:visp_tracker::TrackerClient
baseLinkFrameId	vision_visp/visp_tracker/scripts/tf_localization.py	/^baseLinkFrameId = rospy.get_param('~base_link_frame_id', '\/base_link')$/;"	v
bindImageCallback	vision_visp/visp_tracker/src/libvisp_tracker/callbacks.cpp	/^bindImageCallback(vpImage<unsigned char>& image)$/;"	f
bindImageCallback	vision_visp/visp_tracker/src/libvisp_tracker/callbacks.cpp	/^bindImageCallback(vpImage<unsigned char>& image,$/;"	f
blMc	vision_visp/visp_tracker/scripts/tf_localization.py	/^blMc = np.matrix(np.identity(4))$/;"	v
buildFrom	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^void vpQuaternionVector::buildFrom(const vpRotationMatrix &R)$/;"	f	class:vpQuaternionVector
cMo	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      vpHomogeneousMatrix cMo;$/;"	m	struct:tracking::DetectModel
cMo	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    vpHomogeneousMatrix cMo;$/;"	m	class:tracking::TrackModel
cMo_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    vpHomogeneousMatrix cMo_; \/\/ Pose computed using the tracker.$/;"	m	class:tracking::Tracker_
cMo_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    boost::optional<vpHomogeneousMatrix> cMo_;$/;"	m	class:visp_tracker::TrackerViewer
cMo_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    vpHomogeneousMatrix cMo_;$/;"	m	class:visp_tracker::Tracker
cMo_vec_	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^    std::vector<vpHomogeneousMatrix> cMo_vec_;$/;"	m	class:visp_hand2eye_calibration::Calibrator
calibrateCallback	vision_visp/visp_camera_calibration/src/calibrator.cpp	/^  bool Calibrator::calibrateCallback(visp_camera_calibration::calibrate::Request  &req, visp_camera_calibration::calibrate::Response &res){$/;"	f	class:visp_camera_calibration::Calibrator
calibrate_service_	vision_visp/visp_camera_calibration/src/calibrator.h	/^    ros::ServiceServer          calibrate_service_;$/;"	m	class:visp_camera_calibration::Calibrator
calibrate_service_	vision_visp/visp_camera_calibration/src/camera.h	/^  ros::ServiceClient calibrate_service_;$/;"	m	class:visp_camera_calibration::Camera
calibrate_service_	vision_visp/visp_camera_calibration/src/image_processing.h	/^  ros::ServiceClient calibrate_service_;$/;"	m	class:visp_camera_calibration::ImageProcessing
calibrate_service_callback_t	vision_visp/visp_camera_calibration/src/calibrator.h	/^      calibrate_service_callback_t;$/;"	t	class:visp_camera_calibration::Calibrator
calibrations_	vision_visp/visp_camera_calibration/src/calibrator.h	/^    std::vector<vpCalibration>  calibrations_;$/;"	m	class:visp_camera_calibration::Calibrator
call_localize_object_service	object_registration/test/test_object_localize_service.cpp	/^bool call_localize_object_service(PointCloudT::Ptr object_in, PointCloudT::Ptr scene_in){$/;"	f
callback	vision_visp/visp_tracker/scripts/tf_localization.py	/^def callback(cMo_msg):$/;"	f
callback	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^  TrackerViewer::callback$/;"	f	class:visp_tracker::TrackerViewer
cam_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/events.h	/^    vpCameraParameters cam_;$/;"	m	struct:tracking::input_ready
cam_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    vpCameraParameters cam_;$/;"	m	class:tracking::Tracker_
cam_	vision_visp/visp_auto_tracker/src/node.h	/^                vpCameraParameters cam_;$/;"	m	class:visp_auto_tracker::Node
cam_	vision_visp/visp_camera_calibration/src/image_processing.h	/^  vpCameraParameters cam_;$/;"	m	class:visp_camera_calibration::ImageProcessing
cam_depth_info_sub	door_handle_detection/include/door_handle_detection.h	/^  ros::Subscriber cam_depth_info_sub;$/;"	m	class:DoorHandleDetectionNode
cam_rgb_info_sub	door_handle_detection/include/door_handle_detection.h	/^  ros::Subscriber cam_rgb_info_sub;$/;"	m	class:DoorHandleDetectionNode
cameraInfoSubscriber_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    message_filters::Subscriber<sensor_msgs::CameraInfo> cameraInfoSubscriber_;$/;"	m	class:visp_tracker::TrackerViewer
cameraInfoTopic_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    std::string cameraInfoTopic_;$/;"	m	class:visp_tracker::TrackerClient
cameraInfoTopic_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    std::string cameraInfoTopic_;$/;"	m	class:visp_tracker::TrackerViewer
cameraInfoTopic_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    std::string cameraInfoTopic_;$/;"	m	class:visp_tracker::Tracker
cameraObjectCallback	vision_visp/visp_hand2eye_calibration/src/calibrator.cpp	/^  void Calibrator::cameraObjectCallback(const geometry_msgs::Transform::ConstPtr& trans)$/;"	f	class:visp_hand2eye_calibration::Calibrator
cameraParameters_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    vpCameraParameters cameraParameters_;$/;"	m	class:visp_tracker::TrackerClient
cameraParameters_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    vpCameraParameters cameraParameters_;$/;"	m	class:visp_tracker::TrackerViewer
cameraParameters_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    vpCameraParameters cameraParameters_;$/;"	m	class:visp_tracker::Tracker
cameraPrefix_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    std::string cameraPrefix_;$/;"	m	class:visp_tracker::TrackerClient
cameraPrefix_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    std::string cameraPrefix_;$/;"	m	class:visp_tracker::Tracker
cameraSubscriber_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    image_transport::CameraSubscriber cameraSubscriber_;$/;"	m	class:visp_tracker::TrackerClient
cameraSubscriber_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    image_transport::CameraSubscriber cameraSubscriber_;$/;"	m	class:visp_tracker::Tracker
camera_object_publisher_	vision_visp/visp_hand2eye_calibration/src/client.h	/^    ros::Publisher camera_object_publisher_;$/;"	m	class:visp_hand2eye_calibration::Client
camera_object_subscriber_	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^    ros::Subscriber camera_object_subscriber_;$/;"	m	class:visp_hand2eye_calibration::Calibrator
camera_object_subscriber_callback_t	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^      camera_object_subscriber_callback_t;$/;"	t	class:visp_hand2eye_calibration::Calibrator
centroid	handle_detector/include/handle_detector/cylindrical_shell.h	/^  Eigen::Vector3d centroid;$/;"	m	class:CylindricalShell
chatterCallback	handle_detector/src/importance_sampling.cpp	/^void chatterCallback(const sensor_msgs::PointCloud2ConstPtr& input)$/;"	f
chatterCallback	handle_detector/src/localization.cpp	/^void chatterCallback(const sensor_msgs::PointCloud2ConstPtr& input)$/;"	f
checkInputs	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::checkInputs()$/;"	f	class:visp_tracker::TrackerClient
checkInputs	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^  TrackerViewer::checkInputs()$/;"	f	class:visp_tracker::TrackerViewer
checkInputs	vision_visp/visp_tracker/src/libvisp_tracker/tracker.cpp	/^  void Tracker::checkInputs()$/;"	f	class:visp_tracker::Tracker
checkInputs_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    image_proc::AdvertisementChecker checkInputs_;$/;"	m	class:visp_tracker::TrackerClient
checkInputs_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    image_proc::AdvertisementChecker checkInputs_;$/;"	m	class:visp_tracker::TrackerViewer
checkInputs_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    image_proc::AdvertisementChecker checkInputs_;$/;"	m	class:visp_tracker::Tracker
check_inputs_	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^    image_proc::AdvertisementChecker check_inputs_;$/;"	m	class:visp_hand2eye_calibration::Calibrator
checkpoints	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^      > var,var_x,var_y,var_z,var_wx,var_wy,var_wz,checkpoints;$/;"	m	struct:tracking::Tracker_::__anon2
childFrameId_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    std::string childFrameId_;$/;"	m	class:visp_tracker::Tracker
cloud_callback	door_recognition/src/findit.cpp	/^void cloud_callback(const sensor_msgs::PointCloud2ConstPtr &msg){$/;"	f
cloud_callback	object_registration/src/interest_box_marker.cpp	/^void cloud_callback(const sensor_msgs::PointCloud2::ConstPtr& msg){$/;"	f
cloud_mutex	object_registration/src/interest_box_marker.cpp	/^boost::mutex cloud_mutex;$/;"	v
cmd	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    CmdLine cmd;$/;"	m	class:tracking::Tracker_
cmd_	vision_visp/visp_auto_tracker/src/node.h	/^                CmdLine cmd_;$/;"	m	class:visp_auto_tracker::Node
code_message_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::string code_message_; \/\/ Code message used to specify which target to track$/;"	m	class:CmdLine
code_message_	vision_visp/visp_auto_tracker/src/node.h	/^                std::string code_message_;$/;"	m	class:visp_auto_tracker::Node
code_message_index_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  int code_message_index_; \/\/ Index in the vector of code messages that were found$/;"	m	class:CmdLine
coefficients	door_handle_detection/include/door_handle_detection.h	/^  pcl::ModelCoefficients::Ptr coefficients;$/;"	m	struct:inliersAndCoefficients
command_callback	object_registration/src/interest_box_marker.cpp	/^void command_callback(const std_msgs::String::ConstPtr& msg){$/;"	f
common	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^void CmdLine::common(){$/;"	f	class:CmdLine
compensateRobotMotion_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    bool compensateRobotMotion_;$/;"	m	class:visp_tracker::Tracker
computeEffectorCameraCallback	vision_visp/visp_hand2eye_calibration/src/calibrator.cpp	/^  bool Calibrator::computeEffectorCameraCallback($/;"	f	class:visp_hand2eye_calibration::Calibrator
computeEffectorCameraQuickCallback	vision_visp/visp_hand2eye_calibration/src/calibrator.cpp	/^  bool Calibrator::computeEffectorCameraQuickCallback($/;"	f	class:visp_hand2eye_calibration::Calibrator
computeFeature	handle_detector/include/handle_detector/curvature_estimation_taubin.hpp	/^template<typename PointInT, typename PointOutT> void pcl::CurvatureEstimationTaubin<PointInT, PointOutT>::computeFeature($/;"	f	class:pcl::CurvatureEstimationTaubin
computeFromTopicStream	vision_visp/visp_hand2eye_calibration/src/client.cpp	/^void Client::computeFromTopicStream()$/;"	f	class:visp_hand2eye_calibration::Client
computeUsingQuickService	vision_visp/visp_hand2eye_calibration/src/client.cpp	/^void Client::computeUsingQuickService()$/;"	f	class:visp_hand2eye_calibration::Client
compute_effector_camera_quick_service_	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^    ros::ServiceServer compute_effector_camera_quick_service_;$/;"	m	class:visp_hand2eye_calibration::Calibrator
compute_effector_camera_quick_service_	vision_visp/visp_hand2eye_calibration/src/client.h	/^    ros::ServiceClient compute_effector_camera_quick_service_;$/;"	m	class:visp_hand2eye_calibration::Client
compute_effector_camera_quick_service_callback_t	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^      compute_effector_camera_quick_service_callback_t;$/;"	t	class:visp_hand2eye_calibration::Calibrator
compute_effector_camera_service_	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^    ros::ServiceServer compute_effector_camera_service_;$/;"	m	class:visp_hand2eye_calibration::Calibrator
compute_effector_camera_service_	vision_visp/visp_hand2eye_calibration/src/client.h	/^    ros::ServiceClient compute_effector_camera_service_;$/;"	m	class:visp_hand2eye_calibration::Client
compute_effector_camera_service_callback_t	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^      compute_effector_camera_service_callback_t;$/;"	t	class:visp_hand2eye_calibration::Calibrator
config_file	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::string config_file;$/;"	m	class:CmdLine
confirmInit_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    bool confirmInit_;$/;"	m	class:visp_tracker::TrackerClient
convertInitRequestToVpKltOpencv	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^void convertInitRequestToVpKltOpencv(const visp_tracker::Init::Request& req,$/;"	f
convertInitRequestToVpMbTracker	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^void convertInitRequestToVpMbTracker(const visp_tracker::Init::Request& req,$/;"	f
convertInitRequestToVpMe	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^void convertInitRequestToVpMe(const visp_tracker::Init::Request& req,$/;"	f
convertModelBasedSettingsConfigToVpKltOpencv	vision_visp/visp_tracker/src/libvisp_tracker/conversion.hh	/^void convertModelBasedSettingsConfigToVpKltOpencv(const ConfigType& config,$/;"	f
convertModelBasedSettingsConfigToVpMbTracker	vision_visp/visp_tracker/src/libvisp_tracker/conversion.hh	/^void convertModelBasedSettingsConfigToVpMbTracker(const ConfigType& config,$/;"	f
convertModelBasedSettingsConfigToVpMe	vision_visp/visp_tracker/src/libvisp_tracker/conversion.hh	/^void convertModelBasedSettingsConfigToVpMe(const ConfigType& config,$/;"	f
convertVpKltOpencvToInitRequest	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^void convertVpKltOpencvToInitRequest(const vpKltOpencv& klt,$/;"	f
convertVpKltOpencvToModelBasedSettingsConfig	vision_visp/visp_tracker/src/libvisp_tracker/conversion.hh	/^void convertVpKltOpencvToModelBasedSettingsConfig(const vpKltOpencv& klt,$/;"	f
convertVpKltOpencvToRosMessage	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^std::string convertVpKltOpencvToRosMessage(const vpMbTracker* tracker, const vpKltOpencv& klt)$/;"	f
convertVpMbTrackerToInitRequest	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^void convertVpMbTrackerToInitRequest(const vpMbTracker* tracker,$/;"	f
convertVpMbTrackerToModelBasedSettingsConfig	vision_visp/visp_tracker/src/libvisp_tracker/conversion.hh	/^void convertVpMbTrackerToModelBasedSettingsConfig(const vpMbTracker* tracker,$/;"	f
convertVpMbTrackerToRosMessage	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^std::string convertVpMbTrackerToRosMessage(const vpMbTracker* tracker)$/;"	f
convertVpMeToInitRequest	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^void convertVpMeToInitRequest(const vpMe& moving_edge,$/;"	f
convertVpMeToModelBasedSettingsConfig	vision_visp/visp_tracker/src/libvisp_tracker/conversion.hh	/^void convertVpMeToModelBasedSettingsConfig(const vpMe& moving_edge,$/;"	f
convertVpMeToRosMessage	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^std::string convertVpMeToRosMessage(const vpMbTracker* tracker, const vpMe& moving_edge)$/;"	f
corner0	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      vpImagePoint corner0;$/;"	m	struct:tracking::DetectFlashcodeGeneric
corner1	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      vpImagePoint corner1;$/;"	m	struct:tracking::DetectFlashcodeGeneric
corner2	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      vpImagePoint corner2;$/;"	m	struct:tracking::DetectFlashcodeGeneric
corner3	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      vpImagePoint corner3;$/;"	m	struct:tracking::DetectFlashcodeGeneric
countAll_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    unsigned countAll_;$/;"	m	class:visp_tracker::TrackerViewer
countCameraInfo_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    unsigned countCameraInfo_;$/;"	m	class:visp_tracker::TrackerViewer
countImages_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    unsigned countImages_;$/;"	m	class:visp_tracker::TrackerViewer
countKltPoints_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    unsigned countKltPoints_;$/;"	m	class:visp_tracker::TrackerViewer
countMovingEdgeSites_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    unsigned countMovingEdgeSites_;$/;"	m	class:visp_tracker::TrackerViewer
countTrackingResult_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    unsigned countTrackingResult_;$/;"	m	class:visp_tracker::TrackerViewer
covariance	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    vpMatrix covariance;$/;"	m	class:tracking::TrackModel
covariance_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    vpMatrix covariance_; \/\/ Covariance associated to the pose estimation$/;"	m	class:tracking::Tracker_
createArrowMarker	object_registration/src/interest_box_marker.cpp	/^void createArrowMarker(const std::string arrow_name, const float box_size_in_dimension,$/;"	f
createBoxMarker	object_registration/src/interest_box_marker.cpp	/^void createBoxMarker(visualization_msgs::InteractiveMarker& int_marker,$/;"	f
createCylinder	handle_detector/src/messages.cpp	/^handle_detector::CylinderMsg Messages::createCylinder(const CylindricalShell &shell, std::string frame)$/;"	f	class:Messages
createCylinder	handle_detector/src/sampling_visualizer.cpp	/^pcl::ModelCoefficients SamplingVisualizer::createCylinder(Eigen::Vector3d pt_on_axis, Eigen::Vector3d axis_direction,$/;"	f	class:SamplingVisualizer
createCylinderArray	handle_detector/src/messages.cpp	/^handle_detector::CylinderArrayMsg Messages::createCylinderArray(const std::vector<CylindricalShell> &list,$/;"	f	class:Messages
createCylinders	handle_detector/src/visualizer.cpp	/^MarkerArray Visualizer::createCylinders(const std::vector<CylindricalShell> &list, const std::string &frame)$/;"	f	class:Visualizer
createHandleList	handle_detector/src/messages.cpp	/^handle_detector::HandleListMsg Messages::createHandleList(const std::vector<std::vector<CylindricalShell> > &handles,$/;"	f	class:Messages
createHandleNumbers	handle_detector/src/visualizer.cpp	/^MarkerArray Visualizer::createHandleNumbers(const std::vector<std::vector<CylindricalShell> > &handles,$/;"	f	class:Visualizer
createHandles	handle_detector/src/visualizer.cpp	/^void Visualizer::createHandles(const std::vector<std::vector<CylindricalShell> > &handles, const std::string &frame,$/;"	f	class:Visualizer
createPCLSandwich	door_handle_detection/src/door_handle_detection.cpp	/^pcl::PointCloud<pcl::PointXYZ>::Ptr DoorHandleDetectionNode::createPCLSandwich(const pcl::PointCloud<pcl::PointXYZ>::Ptr & cloud, vpColVector coefficients)$/;"	f	class:DoorHandleDetectionNode
createPlanePC	door_handle_detection/src/door_handle_detection.cpp	/^pcl::PointCloud<pcl::PointXYZ>::Ptr DoorHandleDetectionNode::createPlanePC(const pcl::PointCloud<pcl::PointXYZ>::Ptr & cloud, const pcl::PointIndices::Ptr inliers, pcl::ModelCoefficients::Ptr coefficients)$/;"	f	class:DoorHandleDetectionNode
createRandomIndices	handle_detector/src/affordances.cpp	/^std::vector<int> Affordances::createRandomIndices(const PointCloud::Ptr &cloud, int size)$/;"	f	class:Affordances
createTFLine	door_handle_detection/src/door_handle_detection.cpp	/^vpHomogeneousMatrix DoorHandleDetectionNode::createTFLine(const vpColVector direction_axis, vpColVector normal, const double x, const double y, const double z)$/;"	f	class:DoorHandleDetectionNode
createTFPlane	door_handle_detection/src/door_handle_detection.cpp	/^vpHomogeneousMatrix DoorHandleDetectionNode::createTFPlane(const vpColVector coeffs, const double x, const double y, const double z)$/;"	f	class:DoorHandleDetectionNode
createViewer	handle_detector/src/sampling_visualizer.cpp	/^void SamplingVisualizer::createViewer(PointCloud::ConstPtr cloud, std::vector<CylindricalShell> shells,$/;"	f	class:SamplingVisualizer
createViewerRGB	handle_detector/src/sampling_visualizer.cpp	/^void SamplingVisualizer::createViewerRGB(PointCloudRGB::ConstPtr cloud, std::vector<CylindricalShell> shells,$/;"	f	class:SamplingVisualizer
curvature_axis	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^    float curvature_axis[4];$/;"	m	union:pcl::PointCurvatureTaubin::__anon5
curvature_axis	handle_detector/include/handle_detector/cylindrical_shell.h	/^  Eigen::Vector3d curvature_axis;$/;"	m	class:CylindricalShell
curvature_axis_x	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^      float curvature_axis_x;$/;"	m	struct:pcl::PointCurvatureTaubin::__anon5::__anon6
curvature_axis_y	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^      float curvature_axis_y;$/;"	m	struct:pcl::PointCurvatureTaubin::__anon5::__anon6
curvature_axis_z	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^      float curvature_axis_z;$/;"	m	struct:pcl::PointCurvatureTaubin::__anon5::__anon6
curvature_centroid	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^    float curvature_centroid[4];$/;"	m	union:pcl::PointCurvatureTaubin::__anon7
curvature_centroid_x	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^      float curvature_centroid_x;$/;"	m	struct:pcl::PointCurvatureTaubin::__anon7::__anon8
curvature_centroid_y	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^      float curvature_centroid_y;$/;"	m	struct:pcl::PointCurvatureTaubin::__anon7::__anon8
curvature_centroid_z	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^      float curvature_centroid_z;$/;"	m	struct:pcl::PointCurvatureTaubin::__anon7::__anon8
curvature_estimator	handle_detector/include/handle_detector/affordances.h	/^		int curvature_estimator;$/;"	m	class:Affordances
cvTrackingBox_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    cv::Rect cvTrackingBox_;$/;"	m	class:tracking::Tracker_
cvTrackingBox_init_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    bool cvTrackingBox_init_;$/;"	m	class:tracking::Tracker_
data_dir_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::string data_dir_;$/;"	m	class:CmdLine
datamatrix	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/datamatrix/detector.cpp	/^namespace datamatrix{$/;"	n	namespace:detectors	file:
datamatrix	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/datamatrix/detector.h	/^namespace datamatrix{$/;"	n	namespace:detectors
debug	door_handle_detection/include/door_handle_detection.h	/^  bool debug;$/;"	m	class:DoorHandleDetectionNode
debug_display_	vision_visp/visp_auto_tracker/src/node.h	/^                bool debug_display_;$/;"	m	class:visp_auto_tracker::Node
debug_pcl_pub	door_handle_detection/include/door_handle_detection.h	/^  ros::Publisher debug_pcl_pub;$/;"	m	class:DoorHandleDetectionNode
detect	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/datamatrix/detector.cpp	/^  bool Detector::detect(cv::Mat& image, int timeout, unsigned int offsetx, unsigned int offsety){$/;"	f	class:detectors::datamatrix::Detector
detect	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/qrcode/detector.cpp	/^  bool Detector::detect(cv::Mat& image, int timeout, unsigned int offsetx, unsigned int offsety){$/;"	f	class:detectors::qrcode::Detector
detector_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    detectors::DetectorBase* detector_;$/;"	m	class:tracking::Tracker_
detector_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    vpDetectorBase *detector_;$/;"	m	class:tracking::Tracker_
detectors	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/datamatrix/detector.cpp	/^namespace detectors{$/;"	n	file:
detectors	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/datamatrix/detector.h	/^namespace detectors{$/;"	n
detectors	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/detector_base.cpp	/^namespace detectors{$/;"	n	file:
detectors	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/detector_base.h	/^namespace detectors{$/;"	n
detectors	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/qrcode/detector.cpp	/^namespace detectors{$/;"	n	file:
detectors	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/qrcode/detector.h	/^namespace detectors{$/;"	n
displayImage	door_handle_detection/src/door_handle_detection.cpp	/^void DoorHandleDetectionNode::displayImage(const sensor_msgs::Image::ConstPtr& image)$/;"	f	class:DoorHandleDetectionNode
displayKltPoints	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^  TrackerViewer::displayKltPoints()$/;"	f	class:visp_tracker::TrackerViewer
displayMovingEdgeSites	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^  TrackerViewer::displayMovingEdgeSites()$/;"	f	class:visp_tracker::TrackerViewer
dmtx_only	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: dmtx_only() const{$/;"	f	class:CmdLine
dmx_timeout_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  int dmx_timeout_;$/;"	m	class:CmdLine
door_detector_client	door_recognition/src/findit.cpp	/^ros::ServiceClient door_detector_client;$/;"	v
door_handle_status_pub	door_handle_detection/include/door_handle_detection.h	/^  ros::Publisher door_handle_status_pub;$/;"	m	class:DoorHandleDetectionNode
door_in_baselink_cloud_pub	door_recognition/src/findit.cpp	/^    ros::Publisher door_in_baselink_cloud_pub;$/;"	v
door_in_head_cloud_pub	door_recognition/src/findit.cpp	/^    ros::Publisher door_in_head_cloud_pub;$/;"	v
emc_comm	vision_visp/visp_hand2eye_calibration/src/client.h	/^    visp_hand2eye_calibration::compute_effector_camera emc_comm;$/;"	m	class:visp_hand2eye_calibration::Client
emc_quick_comm	vision_visp/visp_hand2eye_calibration/src/client.h	/^    visp_hand2eye_calibration::compute_effector_camera_quick emc_quick_comm;$/;"	m	class:visp_hand2eye_calibration::Client
estimateCurvatureAxisNormals	handle_detector/src/affordances.cpp	/^void Affordances::estimateCurvatureAxisNormals(const pcl::PointCloud<pcl::Normal>::Ptr &cloud_normals,$/;"	f	class:Affordances
estimateCurvatureAxisPCA	handle_detector/src/affordances.cpp	/^void Affordances::estimateCurvatureAxisPCA(const PointCloud::Ptr &cloud, int nn_center_idx, std::vector<int> nn_indices,$/;"	f	class:Affordances
estimateMedianCurvature	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  inline void estimateMedianCurvature(const std::vector<int> &indices, const Eigen::VectorXd &quadric_parameters,$/;"	f	class:pcl::CurvatureEstimationTaubin
estimateNormals	handle_detector/src/affordances.cpp	/^void Affordances::estimateNormals(const PointCloud::Ptr &cloud, const pcl::PointCloud<pcl::Normal>::Ptr &cloud_normals)$/;"	f	class:Affordances
euler2rot	door_handle_detection/src/door_handle_detection.cpp	/^cv::Mat euler2rot(const cv::Mat & euler)$/;"	f
exiting	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    bool exiting ()$/;"	f	class:visp_tracker::TrackerClient
exiting	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    bool exiting ()$/;"	f	class:visp_tracker::TrackerViewer
exiting	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    bool exiting ()$/;"	f	class:visp_tracker::Tracker
exiting_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    volatile bool& exiting_;$/;"	m	class:visp_tracker::TrackerClient
exiting_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    volatile bool& exiting_;$/;"	m	class:visp_tracker::TrackerViewer
exiting_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    volatile bool& exiting_;$/;"	m	class:visp_tracker::Tracker
exiting_	vision_visp/visp_tracker/src/nodelets/client.cpp	/^    volatile bool exiting_;$/;"	m	class:visp_tracker::TrackerClientNodelet	file:
exiting_	vision_visp/visp_tracker/src/nodelets/tracker.cpp	/^    volatile bool exiting_;$/;"	m	class:visp_tracker::TrackerNodelet	file:
exiting_	vision_visp/visp_tracker/src/nodelets/viewer.cpp	/^    volatile bool exiting_;$/;"	m	class:visp_tracker::TrackerViewerNodelet	file:
extent	handle_detector/include/handle_detector/cylindrical_shell.h	/^  double extent;$/;"	m	class:CylindricalShell
f_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    std::vector<vpPoint> f_;$/;"	m	class:tracking::Tracker_
fetchResource	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::fetchResource(const std::string& s)$/;"	f	class:visp_tracker::TrackerClient
file	handle_detector/include/handle_detector/affordances.h	/^    std::string file;$/;"	m	class:Affordances
file_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/logfilewriter.hpp	/^    std::ofstream& file_;$/;"	m	class:tracking::LogFileWriter
fillMeasurements	door_handle_detection/src/door_handle_detection.cpp	/^void fillMeasurements( cv::Mat &measurements, const cv::Mat &translation_measured, const cv::Mat &rotation_measured)$/;"	f
findBestColinearSet	handle_detector/src/affordances.cpp	/^void Affordances::findBestColinearSet(const std::vector<CylindricalShell> &list, std::vector<int> &inliersMaxSet,$/;"	f	class:Affordances
find_flashcode_pos	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  void Tracker_:: find_flashcode_pos(input_ready const& evt){$/;"	f	class:tracking::Tracker_
finished	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/events.h	/^  struct finished{$/;"	s	namespace:tracking
fitCylinder	handle_detector/src/cylindrical_shell.cpp	/^void CylindricalShell::fitCylinder(const PointCloud::Ptr &cloud, const std::vector<int> &indices,$/;"	f	class:CylindricalShell
fitQuadric	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  inline void fitQuadric(const std::vector<int> &indices, Eigen::VectorXd &quadric_parameters,$/;"	f	class:pcl::CurvatureEstimationTaubin
flashcode_center_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    vpImagePoint flashcode_center_;$/;"	m	class:tracking::Tracker_
flashcode_coordinates	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::vector<double> flashcode_coordinates,inner_coordinates,outer_coordinates;$/;"	m	class:CmdLine
flashcode_detected	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  bool Tracker_:: flashcode_detected(input_ready const& evt){$/;"	f	class:tracking::Tracker_
flashcode_points_3D_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::vector<vpPoint> flashcode_points_3D_;$/;"	m	class:CmdLine
flashcode_redetected	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  bool Tracker_:: flashcode_redetected(input_ready const& evt){$/;"	f	class:tracking::Tracker_
flush_display_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    bool flush_display_;$/;"	m	class:tracking::Tracker_
frame	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/events.h	/^    int frame;$/;"	m	struct:tracking::input_ready
frameCallback	vision_visp/visp_auto_tracker/src/node.cpp	/^        void Node::frameCallback(const sensor_msgs::ImageConstPtr& image, const sensor_msgs::CameraInfoConstPtr& cam_info){$/;"	f	class:visp_auto_tracker::Node
frameSize_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    double frameSize_;$/;"	m	class:visp_tracker::TrackerClient
frameSize_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    double frameSize_;$/;"	m	class:visp_tracker::TrackerViewer
g_affordances	handle_detector/src/importance_sampling.cpp	/^Affordances g_affordances;$/;"	v
g_affordances	handle_detector/src/localization.cpp	/^Affordances g_affordances;$/;"	v
g_caught_sigint	handle_tracking/src/scanning_test.cpp	/^bool g_caught_sigint=false;$/;"	v
g_caught_sigint	object_registration/src/interest_box_marker.cpp	/^bool g_caught_sigint = false;$/;"	v
g_cylindrical_shells	handle_detector/src/importance_sampling.cpp	/^std::vector<CylindricalShell> g_cylindrical_shells;$/;"	v
g_cylindrical_shells	handle_detector/src/localization.cpp	/^std::vector<CylindricalShell> g_cylindrical_shells;$/;"	v
g_handles	handle_detector/src/importance_sampling.cpp	/^std::vector<std::vector<CylindricalShell> > g_handles;$/;"	v
g_handles	handle_detector/src/localization.cpp	/^std::vector<std::vector<CylindricalShell> > g_handles;$/;"	v
g_has_read	handle_detector/src/importance_sampling.cpp	/^bool g_has_read = false;$/;"	v
g_has_read	handle_detector/src/localization.cpp	/^bool g_has_read = false;$/;"	v
g_prev_time	handle_detector/src/importance_sampling.cpp	/^double g_prev_time;$/;"	v
g_prev_time	handle_detector/src/localization.cpp	/^double g_prev_time;$/;"	v
g_sampling	handle_detector/src/importance_sampling.cpp	/^Sampling g_sampling;$/;"	v
g_transform	handle_detector/src/localization.cpp	/^tf::StampedTransform g_transform;$/;"	v
g_update_interval	handle_detector/src/importance_sampling.cpp	/^double g_update_interval;$/;"	v
g_update_interval	handle_detector/src/localization.cpp	/^double g_update_interval;$/;"	v
gen	vision_visp/visp_tracker/cfg/ModelBasedSettings.cfg	/^gen = ParameterGenerator()$/;"	v
gen	vision_visp/visp_tracker/cfg/ModelBasedSettingsEdge.cfg	/^gen = ParameterGenerator()$/;"	v
gen	vision_visp/visp_tracker/cfg/ModelBasedSettingsKlt.cfg	/^gen = ParameterGenerator()$/;"	v
getCameraregion	handle_tracking/src/object_scan.cpp	/^void Handle_manager::getCameraregion()$/;"	f	class:Handle_manager
getCentroid	handle_detector/include/handle_detector/cylindrical_shell.h	/^  inline Eigen::Vector3d getCentroid() const$/;"	f	class:CylindricalShell
getCentroidPCL	door_handle_detection/src/door_handle_detection.cpp	/^vpColVector DoorHandleDetectionNode::getCentroidPCL(const pcl::PointCloud<pcl::PointXYZ>::Ptr &cloud)$/;"	f	class:DoorHandleDetectionNode
getCloudinBox	object_registration/src/interest_box_marker.cpp	/^bool getCloudinBox(){$/;"	f
getCoeffLineWithODR	door_handle_detection/src/door_handle_detection.cpp	/^vpColVector DoorHandleDetectionNode::getCoeffLineWithODR(const pcl::PointCloud<pcl::PointXYZ>::Ptr &cloud)$/;"	f	class:DoorHandleDetectionNode
getColor	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    vpColor getColor(){ return vpColor::green; }$/;"	f	struct:tracking::DetectFlashcode
getColor	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    vpColor getColor(){ return vpColor::orange; }$/;"	f	struct:tracking::ReDetectFlashcode
getConfigurationFileFromModelName	vision_visp/visp_tracker/src/libvisp_tracker/file.cpp	/^getConfigurationFileFromModelName (const std::string& modelName,$/;"	f
getCurvatureAxis	handle_detector/include/handle_detector/cylindrical_shell.h	/^  inline Eigen::Vector3d getCurvatureAxis() const$/;"	f	class:CylindricalShell
getExtent	handle_detector/include/handle_detector/cylindrical_shell.h	/^  inline double getExtent() const$/;"	f	class:CylindricalShell
getExtrinsicParameters	door_handle_detection/src/door_handle_detection.cpp	/^void DoorHandleDetectionNode::getExtrinsicParameters(const sensor_msgs::CameraInfoConstPtr &cam_depth)$/;"	f	class:DoorHandleDetectionNode
getHelpImageFileFromModelName	vision_visp/visp_tracker/src/libvisp_tracker/file.cpp	/^getHelpImageFileFromModelName (const std::string& modelName,$/;"	f
getInitFileFromModelName	vision_visp/visp_tracker/src/libvisp_tracker/file.cpp	/^getInitFileFromModelName (const std::string& modelName,$/;"	f
getInitialPoseFileFromModelName	vision_visp/visp_tracker/src/libvisp_tracker/file.cpp	/^getInitialPoseFileFromModelName (const std::string& modelName,$/;"	f
getModelFileFromModelName	vision_visp/visp_tracker/src/libvisp_tracker/file.cpp	/^getModelFileFromModelName (const std::string& modelName,$/;"	f
getNeighborhoodCentroidIndex	handle_detector/include/handle_detector/cylindrical_shell.h	/^  inline int getNeighborhoodCentroidIndex() const$/;"	f	class:CylindricalShell
getNeighborhoodCentroids	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  inline std::vector<int> const &getNeighborhoodCentroids() const$/;"	f	class:pcl::CurvatureEstimationTaubin::std
getNeighborhoods	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  inline std::vector<std::vector<int> > const &getNeighborhoods() const$/;"	f	class:pcl::CurvatureEstimationTaubin::std
getNormal	handle_detector/include/handle_detector/cylindrical_shell.h	/^  inline Eigen::Vector3d getNormal() const$/;"	f	class:CylindricalShell
getNumSamples	handle_detector/include/handle_detector/affordances.h	/^    int getNumSamples() { return this->num_samples; }$/;"	f	class:Affordances
getOnlyUsefulHandle	door_handle_detection/src/door_handle_detection.cpp	/^pcl::PointCloud<pcl::PointXYZ>::Ptr DoorHandleDetectionNode::getOnlyUsefulHandle(const pcl::PointCloud<pcl::PointXYZ>::Ptr &cloud)$/;"	f	class:DoorHandleDetectionNode
getPCDFile	handle_detector/include/handle_detector/affordances.h	/^    std::string getPCDFile() { return this->file; }$/;"	f	class:Affordances
getPlaneInliersAndCoefficients	door_handle_detection/src/door_handle_detection.cpp	/^inliersAndCoefficients DoorHandleDetectionNode::getPlaneInliersAndCoefficients(const pcl::PointCloud<pcl::PointXYZ>::Ptr &cloud)$/;"	f	class:DoorHandleDetectionNode
getRadius	handle_detector/include/handle_detector/cylindrical_shell.h	/^  inline double getRadius() const$/;"	f	class:CylindricalShell
getRelativePose	object_registration/src/interest_box_marker.cpp	/^void getRelativePose(std::string hand_side){ $/;"	f
getTargetRadius	handle_detector/include/handle_detector/affordances.h	/^    double getTargetRadius() { return this->target_radius; }$/;"	f	class:Affordances
getViewer	handle_detector/include/handle_detector/sampling_visualizer.h	/^  inline boost::shared_ptr<pcl::visualization::PCLVisualizer> getViewer()$/;"	f	class:SamplingVisualizer
get_I	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  vpImage<vpRGBa>& Tracker_:: get_I(){$/;"	f	class:tracking::Tracker_
get_adhoc_recovery_display	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: get_adhoc_recovery_display() const {$/;"	f	class:CmdLine
get_adhoc_recovery_ratio	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^double CmdLine:: get_adhoc_recovery_ratio() const{$/;"	f	class:CmdLine
get_adhoc_recovery_size	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^double CmdLine:: get_adhoc_recovery_size() const{$/;"	f	class:CmdLine
get_adhoc_recovery_treshold	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^unsigned int CmdLine:: get_adhoc_recovery_treshold() const{$/;"	f	class:CmdLine
get_cam	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  vpCameraParameters& Tracker_:: get_cam(){$/;"	f	class:tracking::Tracker_
get_cam_calib_params	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^vpCameraParameters CmdLine::get_cam_calib_params() const{$/;"	f	class:CmdLine
get_cmd	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  CmdLine& Tracker_:: get_cmd(){$/;"	f	class:tracking::Tracker_
get_code_message	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::string CmdLine:: get_code_message() const {$/;"	f	class:CmdLine
get_code_message_index	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^size_t CmdLine:: get_code_message_index() const {$/;"	f	class:CmdLine
get_data_dir	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::string CmdLine:: get_data_dir() const{$/;"	f	class:CmdLine
get_detector	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  detectors::DetectorBase& Tracker_:: get_detector(){$/;"	f	class:tracking::Tracker_
get_detector_type	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^CmdLine::DETECTOR_TYPE CmdLine:: get_detector_type() const{$/;"	f	class:CmdLine
get_dmx_timeout	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^int CmdLine:: get_dmx_timeout() const{$/;"	f	class:CmdLine
get_flashcode	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  std::vector<vpPoint>& Tracker_:: get_flashcode(){$/;"	f	class:tracking::Tracker_
get_flashcode_points_3D	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::vector<vpPoint>& CmdLine:: get_flashcode_points_3D() {$/;"	f	class:CmdLine
get_flush_display	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  bool Tracker_:: get_flush_display(){$/;"	f	class:tracking::Tracker_
get_hinkley_alpha	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^double CmdLine:: get_hinkley_alpha() const{$/;"	f	class:CmdLine
get_hinkley_delta	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^double CmdLine:: get_hinkley_delta() const{$/;"	f	class:CmdLine
get_init_file	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::string CmdLine:: get_init_file() const{$/;"	f	class:CmdLine
get_inner_points_3D	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::vector<vpPoint>& CmdLine:: get_inner_points_3D() {$/;"	f	class:CmdLine
get_inner_ratio	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^double CmdLine:: get_inner_ratio() const{$/;"	f	class:CmdLine
get_input_file_pattern	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::string CmdLine::get_input_file_pattern() const{$/;"	f	class:CmdLine
get_key	ros-keyboard/src/keyboard.cpp	/^bool keyboard::Keyboard::get_key(bool& new_event, bool& pressed, uint16_t& code, uint16_t& modifiers)$/;"	f	class:keyboard::Keyboard
get_lines	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/detector_base.cpp	/^std::vector<std::pair<cv::Point,cv::Point> >& DetectorBase:: get_lines(){$/;"	f	class:detectors::DetectorBase
get_log_file_pattern	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::string CmdLine::get_log_file_pattern() const{$/;"	f	class:CmdLine
get_mbt	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  vpMbTracker& Tracker_:: get_mbt(){$/;"	f	class:tracking::Tracker_
get_mbt_cad_file	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::string CmdLine:: get_mbt_cad_file() const{$/;"	f	class:CmdLine
get_mbt_convergence_steps	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^int CmdLine:: get_mbt_convergence_steps() const{$/;"	f	class:CmdLine
get_mbt_dynamic_range	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^double CmdLine:: get_mbt_dynamic_range() const{$/;"	f	class:CmdLine
get_message	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/detector_base.cpp	/^std::string& DetectorBase:: get_message(){$/;"	f	class:detectors::DetectorBase
get_outer_points_3D	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::vector<vpPoint>& CmdLine:: get_outer_points_3D() {$/;"	f	class:CmdLine
get_outer_ratio	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^double CmdLine:: get_outer_ratio() const{$/;"	f	class:CmdLine
get_pattern_name	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::string CmdLine:: get_pattern_name() const{$/;"	f	class:CmdLine
get_points3D_inner	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  std::vector<vpPoint>& Tracker_:: get_points3D_inner(){$/;"	f	class:tracking::Tracker_
get_points3D_middle	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  std::vector<vpPoint>& Tracker_:: get_points3D_middle(){$/;"	f	class:tracking::Tracker_
get_points3D_outer	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  std::vector<vpPoint>& Tracker_:: get_points3D_outer(){$/;"	f	class:tracking::Tracker_
get_polygon	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/detector_base.cpp	/^std::vector<cv::Point>& DetectorBase:: get_polygon(){$/;"	f	class:detectors::DetectorBase
get_single_image_path	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::string CmdLine:: get_single_image_path() const{$/;"	f	class:CmdLine
get_statistics	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  Tracker_::statistics_t& Tracker_:: get_statistics(){$/;"	f	class:tracking::Tracker_
get_tracker_type	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^CmdLine::TRACKER_TYPE CmdLine:: get_tracker_type() const{$/;"	f	class:CmdLine
get_tracking_box	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  const cv::Rect& Tracker_:: get_tracking_box<cv::Rect>(){$/;"	f	class:tracking::Tracker_
get_tracking_box	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  const vpRect& Tracker_:: get_tracking_box<vpRect>(){$/;"	f	class:tracking::Tracker_
get_var_file	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::string CmdLine:: get_var_file() const{$/;"	f	class:CmdLine
get_var_limit	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^double CmdLine:: get_var_limit() const{$/;"	f	class:CmdLine
get_verbose	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: get_verbose() const{$/;"	f	class:CmdLine
get_video_channel	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::string CmdLine:: get_video_channel() const{$/;"	f	class:CmdLine
get_xml_file	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^std::string CmdLine:: get_xml_file() const{$/;"	f	class:CmdLine
global_pose	handle_tracking/include/object_scan.h	/^	std::vector<double> global_pose;$/;"	m	class:Handle_manager
global_pose_callback	handle_tracking/src/object_scan.cpp	/^void Handle_manager::global_pose_callback(const geometry_msgs::PoseStamped::ConstPtr& msg)$/;"	f	class:Handle_manager
got_image_	vision_visp/visp_auto_tracker/src/node.h	/^                bool got_image_;$/;"	m	class:visp_auto_tracker::Node
handle_gap	handle_detector/include/handle_detector/affordances.h	/^		double handle_gap;$/;"	m	class:Affordances
handle_pub	door_recognition/src/findit.cpp	/^    ros::Publisher handle_pub;$/;"	v
hasClearance	handle_detector/src/cylindrical_shell.cpp	/^bool CylindricalShell::hasClearance(const PointCloud::Ptr &cloud, const std::vector<int>& nn_indices,$/;"	f	class:CylindricalShell
header_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    std_msgs::Header header_;$/;"	m	class:visp_tracker::TrackerClient
header_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    std_msgs::Header header_;$/;"	m	class:visp_tracker::Tracker
hink_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    hinkley_array_t hink_;$/;"	m	class:tracking::Tracker_
hinkley_array_t	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    typedef boost::array<vpHinkley,6> hinkley_array_t;$/;"	t	class:tracking::Tracker_
hinkley_range_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::vector<double> hinkley_range_;$/;"	m	class:CmdLine
human_boxes_array	handle_tracking/include/object_scan.h	/^	visualization_msgs::MarkerArray human_boxes_array;$/;"	m	class:Handle_manager
illustrate	handle_detector/src/sampling.cpp	/^void Sampling::illustrate(const PointCloud::Ptr &cloud, const PointCloudRGB::Ptr &cloudrgb, double target_radius)$/;"	f	class:Sampling
imageCallback	vision_visp/visp_tracker/src/libvisp_tracker/callbacks.cpp	/^void imageCallback(vpImage<unsigned char>& image,$/;"	f
imagePoints_t	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    typedef std::vector<vpImagePoint> imagePoints_t;$/;"	t	class:visp_tracker::TrackerClient
imageSubscriber_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    image_transport::SubscriberFilter imageSubscriber_;$/;"	m	class:visp_tracker::TrackerViewer
imageTransport_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    image_transport::ImageTransport imageTransport_;$/;"	m	class:visp_tracker::TrackerClient
imageTransport_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    image_transport::ImageTransport imageTransport_;$/;"	m	class:visp_tracker::TrackerViewer
imageTransport_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    image_transport::ImageTransport imageTransport_;$/;"	m	class:visp_tracker::Tracker
image_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    image_t image_;$/;"	m	class:visp_tracker::TrackerClient
image_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    image_t image_;$/;"	m	class:visp_tracker::TrackerViewer
image_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    image_t image_;$/;"	m	class:visp_tracker::Tracker
image_frame_sub	door_handle_detection/include/door_handle_detection.h	/^  ros::Subscriber image_frame_sub;$/;"	m	class:DoorHandleDetectionNode
image_header_	vision_visp/visp_auto_tracker/src/node.h	/^                std_msgs::Header image_header_;$/;"	m	class:visp_auto_tracker::Node
image_t	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    typedef vpImage<unsigned char> image_t;$/;"	t	class:visp_tracker::TrackerClient
image_t	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    typedef vpImage<unsigned char> image_t;$/;"	t	class:visp_tracker::TrackerViewer
image_t	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    typedef vpImage<unsigned char> image_t;$/;"	t	class:visp_tracker::Tracker
img_	vision_visp/visp_camera_calibration/src/camera.h	/^  vpImage<unsigned char> img_;$/;"	m	class:visp_camera_calibration::Camera
img_	vision_visp/visp_camera_calibration/src/image_processing.h	/^  vpImage<unsigned char> img_;$/;"	m	class:visp_camera_calibration::ImageProcessing
increment	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^    static void increment(unsigned int* value)$/;"	f	namespace:visp_tracker::__anon1
index	handle_tracking/include/object_scan.h	/^	int index;$/;"	m	class:Handle_manager
info_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    sensor_msgs::CameraInfoConstPtr info_;$/;"	m	class:visp_tracker::TrackerClient
info_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    sensor_msgs::CameraInfoConstPtr info_;$/;"	m	class:visp_tracker::TrackerViewer
info_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    sensor_msgs::CameraInfoConstPtr info_;$/;"	m	class:visp_tracker::Tracker
init	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^void CmdLine:: init(std::string& config_file)$/;"	f	class:CmdLine
init	vision_visp/visp_camera_calibration/src/image_processing.cpp	/^void ImageProcessing::init() $/;"	f	class:visp_camera_calibration::ImageProcessing
init	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::init()$/;"	f	class:visp_tracker::TrackerClient
initAndSimulate	vision_visp/visp_hand2eye_calibration/src/client.cpp	/^void Client::initAndSimulate()$/;"	f	class:visp_hand2eye_calibration::Client
initCallback	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^  TrackerViewer::initCallback(visp_tracker::Init::Request& req,$/;"	f	class:visp_tracker::TrackerViewer
initCallback	vision_visp/visp_tracker/src/libvisp_tracker/tracker.cpp	/^  Tracker::initCallback(visp_tracker::Init::Request& req,$/;"	f	class:visp_tracker::Tracker
initCallback_t	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    initCallback_t;$/;"	t	class:visp_tracker::TrackerViewer
initCallback_t	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    initCallback_t;$/;"	t	class:visp_tracker::Tracker
initDisplayVisp	door_handle_detection/src/door_handle_detection.cpp	/^void DoorHandleDetectionNode::initDisplayVisp()$/;"	f	class:DoorHandleDetectionNode
initKalmanFilter	door_handle_detection/src/door_handle_detection.cpp	/^void initKalmanFilter(cv::KalmanFilter &KF, int nStates, int nMeasurements, int nInputs, double dt)$/;"	f
initParams	handle_detector/src/affordances.cpp	/^void Affordances::initParams(ros::NodeHandle node)$/;"	f	class:Affordances
initParams	handle_detector/src/sampling.cpp	/^void Sampling::initParams(const ros::NodeHandle& node)$/;"	f	class:Sampling
initPoint	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::initPoint(unsigned& i,$/;"	f	class:visp_tracker::TrackerClient
initService_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    ros::ServiceServer initService_;$/;"	m	class:visp_tracker::TrackerViewer
initService_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    ros::ServiceServer initService_;$/;"	m	class:visp_tracker::Tracker
initial_state	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    typedef WaitingForInput initial_state;      \/\/initial state of our state machine tracker$/;"	t	class:tracking::Tracker_
initializeTracker	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^  TrackerViewer::initializeTracker()$/;"	f	class:visp_tracker::TrackerViewer
initializeVpCameraFromCameraInfo	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^void initializeVpCameraFromCameraInfo(vpCameraParameters& cam,$/;"	f
inliers	door_handle_detection/include/door_handle_detection.h	/^  pcl::PointIndices::Ptr inliers;$/;"	m	struct:inliersAndCoefficients
inliersAndCoefficients	door_handle_detection/include/door_handle_detection.h	/^struct inliersAndCoefficients$/;"	s
inner_coordinates	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::vector<double> flashcode_coordinates,inner_coordinates,outer_coordinates;$/;"	m	class:CmdLine
inner_points_3D_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::vector<vpPoint> inner_points_3D_,outer_points_3D_;$/;"	m	class:CmdLine
inner_ratio_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  double inner_ratio_;$/;"	m	class:CmdLine
input_file_pattern_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::string log_file_pattern_,input_file_pattern_;$/;"	m	class:CmdLine
input_ready	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/events.h	/^    input_ready(vpImage<vpRGBa>& I,vpCameraParameters& cam) : I(I),cam_(cam),frame(0){}$/;"	f	struct:tracking::input_ready
input_ready	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/events.h	/^    input_ready(vpImage<vpRGBa>& I,vpCameraParameters& cam,int frame) : I(I),cam_(cam),frame(frame){}$/;"	f	struct:tracking::input_ready
input_ready	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/events.h	/^  struct input_ready{$/;"	s	namespace:tracking
input_selected	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  bool Tracker_:: input_selected(input_ready const& evt){$/;"	f	class:tracking::Tracker_
interest_box_marker	object_registration/src/interest_box_marker.cpp	/^visualization_msgs::Marker interest_box_marker;$/;"	v
interface	vision_visp/visp_camera_calibration/src/image_processing.cpp	/^void ImageProcessing::interface()$/;"	f	class:visp_camera_calibration::ImageProcessing
isPointInWorkspace	handle_detector/src/affordances.cpp	/^bool Affordances::isPointInWorkspace(double x, double y, double z, tf::StampedTransform *transform)$/;"	f	class:Affordances
isSecondElementSmaller	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  static inline bool isSecondElementSmaller(const std::vector<double>& p1, const std::vector<double>& p2)$/;"	f	class:pcl::CurvatureEstimationTaubin
is_initialized	vision_visp/visp_camera_calibration/src/image_processing.h	/^  bool is_initialized;$/;"	m	class:visp_camera_calibration::ImageProcessing
is_visualized	handle_detector/include/handle_detector/sampling.h	/^  bool is_visualized;$/;"	m	class:Sampling
ite	handle_detector/src/localization.cpp	/^int ite = 0;$/;"	v
iter_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    int iter_;$/;"	m	class:tracking::TrackModel
iter_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    int iter_;$/;"	m	class:tracking::Tracker_
joint_states_callback	handle_tracking/src/object_scan.cpp	/^void Handle_manager::joint_states_callback(const sensor_msgs::JointState::ConstPtr& msg)$/;"	f	class:Handle_manager
keyboard	ros-keyboard/src/keyboard.h	/^namespace keyboard {$/;"	n
keyboard_callback	handle_tracking/src/object_scan.cpp	/^void Handle_manager::keyboard_callback(const keyboard::Key::ConstPtr& msg)$/;"	f	class:Handle_manager
kltPointsPublisher_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    ros::Publisher kltPointsPublisher_;$/;"	m	class:visp_tracker::Tracker
kltPointsSubscriber_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    kltPointsSubscriber_;$/;"	m	class:visp_tracker::TrackerViewer
kltTracker_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    vpKltOpencv kltTracker_;$/;"	m	class:visp_tracker::TrackerClient
kltTracker_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    vpKltOpencv kltTracker_;$/;"	m	class:visp_tracker::Tracker
klt_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    visp_tracker::KltPoints::ConstPtr klt_;$/;"	m	class:visp_tracker::TrackerViewer
lastTrackedImage_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    unsigned lastTrackedImage_;$/;"	m	class:visp_tracker::Tracker
lines_	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/detector_base.h	/^    std::vector<std::pair<cv::Point,cv::Point> > lines_;$/;"	m	class:detectors::DetectorBase
listener	handle_tracking/include/object_scan.h	/^	tf::TransformListener 	  listener;$/;"	m	class:Handle_manager
listener_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    tf::TransformListener listener_;$/;"	m	class:visp_tracker::Tracker
loadCommonParameters	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^  TrackerViewer::loadCommonParameters()$/;"	f	class:visp_tracker::TrackerViewer
loadConfig	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^void CmdLine::loadConfig(std::string& config_file){$/;"	f	class:CmdLine
loadInitialPose	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::loadInitialPose()$/;"	f	class:visp_tracker::TrackerClient
loadInitializationPoints	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::loadInitializationPoints()$/;"	f	class:visp_tracker::TrackerClient
loadModel	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::loadModel()$/;"	f	class:visp_tracker::TrackerClient
loadStoredCloud	object_registration/src/interest_box_marker.cpp	/^bool loadStoredCloud(){$/;"	f
localize_service	object_registration/src/object_localize_service.cpp	/^bool localize_service(object_registration::ObjectLocalize::Request  &req,$/;"	f
lock_	vision_visp/visp_auto_tracker/src/node.h	/^                boost::mutex lock_;$/;"	m	class:visp_auto_tracker::Node
log_checkpoints	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: log_checkpoints() const{$/;"	f	class:CmdLine
log_file_pattern_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::string log_file_pattern_,input_file_pattern_;$/;"	m	class:CmdLine
log_pose	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: log_pose() const{$/;"	f	class:CmdLine
log_pose_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  bool log_pose_;$/;"	m	class:CmdLine
logging_video	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: logging_video() const{$/;"	f	class:CmdLine
m_KF	door_handle_detection/include/door_handle_detection.h	/^  cv::KalmanFilter m_KF;$/;"	m	class:DoorHandleDetectionNode
m_X_max	door_handle_detection/include/door_handle_detection.h	/^  double m_X_max;$/;"	m	class:DoorHandleDetectionNode
m_X_min	door_handle_detection/include/door_handle_detection.h	/^  double m_X_min;$/;"	m	class:DoorHandleDetectionNode
m_Y_max	door_handle_detection/include/door_handle_detection.h	/^  double m_Y_max;$/;"	m	class:DoorHandleDetectionNode
m_Y_min	door_handle_detection/include/door_handle_detection.h	/^  double m_Y_min;$/;"	m	class:DoorHandleDetectionNode
m_Z_bottomleft	door_handle_detection/include/door_handle_detection.h	/^  double m_Z_bottomleft;$/;"	m	class:DoorHandleDetectionNode
m_Z_bottomright	door_handle_detection/include/door_handle_detection.h	/^  double m_Z_bottomright;$/;"	m	class:DoorHandleDetectionNode
m_Z_topleft	door_handle_detection/include/door_handle_detection.h	/^  double m_Z_topleft;$/;"	m	class:DoorHandleDetectionNode
m_Z_topright	door_handle_detection/include/door_handle_detection.h	/^  double m_Z_topright;$/;"	m	class:DoorHandleDetectionNode
m_blob	door_handle_detection/include/door_handle_detection.h	/^  vpDot m_blob;$/;"	m	class:DoorHandleDetectionNode
m_cMh	door_handle_detection/include/door_handle_detection.h	/^  vpHomogeneousMatrix m_cMh;$/;"	m	class:DoorHandleDetectionNode
m_cMh_filtered_kalman	door_handle_detection/include/door_handle_detection.h	/^  vpHomogeneousMatrix m_cMh_filtered_kalman;$/;"	m	class:DoorHandleDetectionNode
m_cam_depth	door_handle_detection/include/door_handle_detection.h	/^  vpCameraParameters m_cam_depth;$/;"	m	class:DoorHandleDetectionNode
m_cam_is_initialized	door_handle_detection/include/door_handle_detection.h	/^  bool m_cam_is_initialized;$/;"	m	class:DoorHandleDetectionNode
m_cam_rgb	door_handle_detection/include/door_handle_detection.h	/^  vpCameraParameters m_cam_rgb;$/;"	m	class:DoorHandleDetectionNode
m_cameraDepthTopicName	door_handle_detection/include/door_handle_detection.h	/^  std::string m_cameraDepthTopicName;$/;"	m	class:DoorHandleDetectionNode
m_cameraRGBTopicName	door_handle_detection/include/door_handle_detection.h	/^  std::string m_cameraRGBTopicName;$/;"	m	class:DoorHandleDetectionNode
m_dMh	door_handle_detection/include/door_handle_detection.h	/^  vpHomogeneousMatrix m_dMh;$/;"	m	class:DoorHandleDetectionNode
m_dh_right	door_handle_detection/include/door_handle_detection.h	/^  bool m_dh_right;$/;"	m	class:DoorHandleDetectionNode
m_disp	door_handle_detection/include/door_handle_detection.h	/^  vpDisplay* m_disp;$/;"	m	class:DoorHandleDetectionNode
m_disp_is_initialized	door_handle_detection/include/door_handle_detection.h	/^  bool m_disp_is_initialized;$/;"	m	class:DoorHandleDetectionNode
m_disp_mono	door_handle_detection/include/door_handle_detection.h	/^  vpDisplay* m_disp_mono;$/;"	m	class:DoorHandleDetectionNode
m_extrinsicParam	door_handle_detection/include/door_handle_detection.h	/^  vpTranslationVector m_extrinsicParam;$/;"	m	class:DoorHandleDetectionNode
m_extrinsic_param_are_initialized	door_handle_detection/include/door_handle_detection.h	/^  bool m_extrinsic_param_are_initialized;$/;"	m	class:DoorHandleDetectionNode
m_height_dh	door_handle_detection/include/door_handle_detection.h	/^  double m_height_dh;$/;"	m	class:DoorHandleDetectionNode
m_imageTopicName	door_handle_detection/include/door_handle_detection.h	/^  std::string m_imageTopicName;$/;"	m	class:DoorHandleDetectionNode
m_img_	door_handle_detection/include/door_handle_detection.h	/^  vpImage<vpRGBa> m_img_;$/;"	m	class:DoorHandleDetectionNode
m_img_mono	door_handle_detection/include/door_handle_detection.h	/^  vpImage<unsigned char> m_img_mono;$/;"	m	class:DoorHandleDetectionNode
m_is_door_handle_present	door_handle_detection/include/door_handle_detection.h	/^  int m_is_door_handle_present;$/;"	m	class:DoorHandleDetectionNode
m_lenght_dh	door_handle_detection/include/door_handle_detection.h	/^  double m_lenght_dh;$/;"	m	class:DoorHandleDetectionNode
m_parent_depth_tf	door_handle_detection/include/door_handle_detection.h	/^  std::string m_parent_depth_tf;$/;"	m	class:DoorHandleDetectionNode
m_parent_rgb_tf	door_handle_detection/include/door_handle_detection.h	/^  std::string m_parent_rgb_tf;$/;"	m	class:DoorHandleDetectionNode
m_pclTopicName	door_handle_detection/include/door_handle_detection.h	/^  std::string m_pclTopicName;$/;"	m	class:DoorHandleDetectionNode
m_pointPoseHandle	door_handle_detection/include/door_handle_detection.h	/^  vpImagePoint m_pointPoseHandle;$/;"	m	class:DoorHandleDetectionNode
m_stop_detection	door_handle_detection/include/door_handle_detection.h	/^  bool m_stop_detection;$/;"	m	class:DoorHandleDetectionNode
m_tracking_is_initialized	door_handle_detection/include/door_handle_detection.h	/^  bool m_tracking_is_initialized;$/;"	m	class:DoorHandleDetectionNode
m_tracking_works	door_handle_detection/include/door_handle_detection.h	/^  bool m_tracking_works;$/;"	m	class:DoorHandleDetectionNode
m_x_max	door_handle_detection/include/door_handle_detection.h	/^  double m_x_max;$/;"	m	class:DoorHandleDetectionNode
m_x_min	door_handle_detection/include/door_handle_detection.h	/^  double m_x_min;$/;"	m	class:DoorHandleDetectionNode
m_y_max	door_handle_detection/include/door_handle_detection.h	/^  double m_y_max;$/;"	m	class:DoorHandleDetectionNode
m_y_min	door_handle_detection/include/door_handle_detection.h	/^  double m_y_min;$/;"	m	class:DoorHandleDetectionNode
main	door_handle_detection/src/door_handle_detection.cpp	/^int main( int argc, char** argv )$/;"	f
main	door_recognition/src/findit.cpp	/^int main (int argc, char** argv)$/;"	f
main	handle_detector/src/importance_sampling.cpp	/^int main(int argc, char** argv)$/;"	f
main	handle_detector/src/localization.cpp	/^int main(int argc, char** argv)$/;"	f
main	handle_tracking/src/scanning_test.cpp	/^int main(int argc, char **argv)$/;"	f
main	object_registration/src/interest_box_marker.cpp	/^int main(int argc, char** argv)$/;"	f
main	object_registration/src/object_localize_service.cpp	/^int main (int argc, char **argv){$/;"	f
main	object_registration/test/test_object_localize_service.cpp	/^int main (int argc, char **argv){$/;"	f
main	ros-keyboard/src/main.cpp	/^int main(int argc, char** argv)$/;"	f
main	vision_visp/visp_auto_tracker/flashcode_mbt/examples/complex.cpp	/^int main(int argc, char**argv)$/;"	f
main	vision_visp/visp_auto_tracker/flashcode_mbt/examples/simple.cpp	/^int main(int argc, char**argv)$/;"	f
main	vision_visp/visp_auto_tracker/src/main.cpp	/^int main(int argc,char** argv){$/;"	f
main	vision_visp/visp_bridge/src/conversions/convert_cam_param_file.cpp	/^int main(int argc, const char ** argv)$/;"	f
main	vision_visp/visp_camera_calibration/src/calibrator_main.cpp	/^int main(int argc, char **argv)$/;"	f
main	vision_visp/visp_camera_calibration/src/camera_main.cpp	/^int main(int argc,char** argv){$/;"	f
main	vision_visp/visp_camera_calibration/src/image_processing_main.cpp	/^int main(int argc,char** argv){$/;"	f
main	vision_visp/visp_hand2eye_calibration/src/calibrator_main.cpp	/^int main(int argc, char **argv)$/;"	f
main	vision_visp/visp_hand2eye_calibration/src/client_main.cpp	/^int main(int argc,char**argv){$/;"	f
main	vision_visp/visp_tracker/src/nodes/client.cpp	/^int main(int argc, char **argv)$/;"	f
main	vision_visp/visp_tracker/src/nodes/tracker.cpp	/^int main(int argc, char **argv)$/;"	f
main	vision_visp/visp_tracker/src/nodes/viewer.cpp	/^int main(int argc, char **argv)$/;"	f
mainComputation	door_handle_detection/src/door_handle_detection.cpp	/^void DoorHandleDetectionNode::mainComputation(const sensor_msgs::PointCloud2::ConstPtr &image)$/;"	f	class:DoorHandleDetectionNode
makeModelFile	vision_visp/visp_tracker/src/libvisp_tracker/file.cpp	/^makeModelFile(boost::filesystem::ofstream& modelStream,$/;"	f
makeModelFile	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::makeModelFile(boost::filesystem::ofstream& modelStream,$/;"	f	class:visp_tracker::TrackerClient
mapFrameId	vision_visp/visp_tracker/scripts/tf_localization.py	/^mapFrameId = rospy.get_param('~map_frame_id', '\/map')$/;"	v
marker_lifetime	handle_detector/include/handle_detector/visualizer.h	/^  double marker_lifetime;$/;"	m	class:Visualizer
maxRangeFilter	handle_detector/src/affordances.cpp	/^PointCloud::Ptr Affordances::maxRangeFilter(const PointCloud::Ptr &cloud_in)$/;"	f	class:Affordances
max_range	handle_detector/include/handle_detector/affordances.h	/^		double max_range;$/;"	m	class:Affordances
max_x	handle_detector/include/handle_detector/affordances.h	/^	double max_x;$/;"	m	struct:WorkspaceLimits
max_y	handle_detector/include/handle_detector/affordances.h	/^	double max_y;$/;"	m	struct:WorkspaceLimits
max_z	handle_detector/include/handle_detector/affordances.h	/^	double max_z;$/;"	m	struct:WorkspaceLimits
mbt_convergence_steps_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  int mbt_convergence_steps_;$/;"	m	class:CmdLine
mbt_dynamic_range_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  double mbt_dynamic_range_;$/;"	m	class:CmdLine
mbt_success	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  bool Tracker_:: mbt_success(input_ready const& evt){$/;"	f	class:tracking::Tracker_
median_curvature	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^    float median_curvature;$/;"	m	union:pcl::PointCurvatureTaubin::__anon9
message_	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/detector_base.h	/^    std::string message_;$/;"	m	class:detectors::DetectorBase
method	handle_detector/include/handle_detector/sampling.h	/^  int method;$/;"	m	class:Sampling
min_x	handle_detector/include/handle_detector/affordances.h	/^	double min_x;$/;"	m	struct:WorkspaceLimits
min_y	handle_detector/include/handle_detector/affordances.h	/^	double min_y;$/;"	m	struct:WorkspaceLimits
min_z	handle_detector/include/handle_detector/affordances.h	/^	double min_z;$/;"	m	struct:WorkspaceLimits
minimum	vision_visp/visp_bridge/include/visp_bridge/vpQuaternionVector.h	/^  static const double minimum;$/;"	m	class:vpQuaternionVector
minimum	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^const double vpQuaternionVector::minimum = 0.0001;$/;"	m	class:vpQuaternionVector	file:
modelName_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    std::string modelName_;$/;"	m	class:visp_tracker::TrackerClient
modelPathAndExt_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    std::string modelPathAndExt_;$/;"	m	class:visp_tracker::TrackerClient
modelPath_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    std::string modelPath_;$/;"	m	class:visp_tracker::TrackerClient
modelPath_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    boost::filesystem::path modelPath_;$/;"	m	class:visp_tracker::TrackerViewer
modelPath_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    boost::filesystem::path modelPath_;$/;"	m	class:visp_tracker::Tracker
model_description_	vision_visp/visp_auto_tracker/src/node.h	/^                std::string model_description_;$/;"	m	class:visp_auto_tracker::Node
model_detected	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  bool Tracker_:: model_detected(msm::front::none const&){$/;"	f	class:tracking::Tracker_
model_inner_corner	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      std::vector<vpImagePoint> model_inner_corner;$/;"	m	struct:tracking::DetectModel
model_name_	vision_visp/visp_auto_tracker/src/node.h	/^                std::string model_name_;$/;"	m	class:visp_auto_tracker::Node
model_outer_corner	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      std::vector<vpImagePoint> model_outer_corner;$/;"	m	struct:tracking::DetectModel
model_path_	vision_visp/visp_auto_tracker/src/node.h	/^                std::string model_path_;$/;"	m	class:visp_auto_tracker::Node
model_points_	vision_visp/visp_camera_calibration/src/calibrator.h	/^    std::vector<vpPoint>        model_points_;$/;"	m	class:visp_camera_calibration::Calibrator
model_points_	vision_visp/visp_camera_calibration/src/image_processing.h	/^  std::vector<vpPoint> model_points_;$/;"	m	class:visp_camera_calibration::ImageProcessing
morphoSandwich	door_handle_detection/src/door_handle_detection.cpp	/^void DoorHandleDetectionNode::morphoSandwich(const pcl::PointCloud<pcl::PointXYZ>::Ptr &cloud)$/;"	f	class:DoorHandleDetectionNode
move_to_frame	door_recognition/src/findit.cpp	/^void move_to_frame(const PointCloudT::Ptr &input, const std::string &target_frame, PointCloudT::Ptr &output) {$/;"	f
movingEdgeSitesPublisher_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    ros::Publisher movingEdgeSitesPublisher_;$/;"	m	class:visp_tracker::Tracker
movingEdgeSitesSubscriber_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    movingEdgeSitesSubscriber_;$/;"	m	class:visp_tracker::TrackerViewer
movingEdge_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    vpMe movingEdge_;$/;"	m	class:visp_tracker::TrackerClient
movingEdge_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    vpMe movingEdge_;$/;"	m	class:visp_tracker::Tracker
msg	handle_detector/src/localization.cpp	/^    geometry_msgs::Pose msg;$/;"	v
msg_trans	handle_detector/src/localization.cpp	/^    geometry_msgs::Pose msg_trans;$/;"	v
mutex_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    boost::recursive_mutex mutex_;$/;"	m	class:visp_tracker::TrackerClient
mutex_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    boost::recursive_mutex mutex_;$/;"	m	class:visp_tracker::Tracker
n	door_handle_detection/include/door_handle_detection.h	/^  ros::NodeHandle n;$/;"	m	class:DoorHandleDetectionNode
n_	vision_visp/visp_auto_tracker/src/node.h	/^                ros::NodeHandle n_;$/;"	m	class:visp_auto_tracker::Node
n_	vision_visp/visp_camera_calibration/src/calibrator.h	/^    ros::NodeHandle             n_;$/;"	m	class:visp_camera_calibration::Calibrator
n_	vision_visp/visp_camera_calibration/src/camera.h	/^  ros::NodeHandle n_;$/;"	m	class:visp_camera_calibration::Camera
n_	vision_visp/visp_camera_calibration/src/image_processing.h	/^  ros::NodeHandle n_;$/;"	m	class:visp_camera_calibration::ImageProcessing
n_	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^    ros::NodeHandle n_;$/;"	m	class:visp_hand2eye_calibration::Calibrator
n_	vision_visp/visp_hand2eye_calibration/src/client.h	/^    ros::NodeHandle n_;$/;"	m	class:visp_hand2eye_calibration::Client
nb_points_	vision_visp/visp_camera_calibration/src/camera.h	/^  unsigned int nb_points_;$/;"	m	class:visp_camera_calibration::Camera
neighborhood_centroid_index	handle_detector/include/handle_detector/cylindrical_shell.h	/^  int neighborhood_centroid_index;$/;"	m	class:CylindricalShell
neighborhood_centroids_	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  std::vector<int> neighborhood_centroids_; \/\/ list of point cloud indices corresponding to neighborhood centroids$/;"	m	class:pcl::CurvatureEstimationTaubin
neighborhoods_	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  std::vector<std::vector<int> > neighborhoods_; \/\/ list of lists of point cloud indices for each neighborhood$/;"	m	class:pcl::CurvatureEstimationTaubin
no_input_selected	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  bool Tracker_:: no_input_selected(input_ready const& evt){$/;"	f	class:tracking::Tracker_
nodeHandlePrivate_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    ros::NodeHandle& nodeHandlePrivate_;$/;"	m	class:visp_tracker::TrackerClient
nodeHandlePrivate_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    ros::NodeHandle& nodeHandlePrivate_;$/;"	m	class:visp_tracker::TrackerViewer
nodeHandlePrivate_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    ros::NodeHandle& nodeHandlePrivate_;$/;"	m	class:visp_tracker::Tracker
nodeHandle_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    ros::NodeHandle& nodeHandle_;$/;"	m	class:visp_tracker::TrackerClient
nodeHandle_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    ros::NodeHandle& nodeHandle_;$/;"	m	class:visp_tracker::TrackerViewer
nodeHandle_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    ros::NodeHandle& nodeHandle_;$/;"	m	class:visp_tracker::Tracker
normal	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^    float normal[4];$/;"	m	union:pcl::PointCurvatureTaubin::__anon3
normal	handle_detector/include/handle_detector/cylindrical_shell.h	/^  Eigen::Vector3d normal;$/;"	m	class:CylindricalShell
normal_x	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^      float normal_x;$/;"	m	struct:pcl::PointCurvatureTaubin::__anon3::__anon4
normal_y	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^      float normal_y;$/;"	m	struct:pcl::PointCurvatureTaubin::__anon3::__anon4
normal_z	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^      float normal_z;$/;"	m	struct:pcl::PointCurvatureTaubin::__anon3::__anon4
numInFront	handle_detector/src/affordances.cpp	/^int Affordances::numInFront(const PointCloud::Ptr &cloud, int center_index, double radius)$/;"	f	class:Affordances
num_init_samples	handle_detector/include/handle_detector/sampling.h	/^  int num_init_samples;$/;"	m	class:Sampling
num_iterations	handle_detector/include/handle_detector/sampling.h	/^  int num_iterations;$/;"	m	class:Sampling
num_samples	handle_detector/include/handle_detector/affordances.h	/^		int num_samples;$/;"	m	class:Affordances
num_samples	handle_detector/include/handle_detector/sampling.h	/^  int num_samples;$/;"	m	class:Sampling
num_samples_	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  unsigned int num_samples_; \/\/ number of samples (neighborhoods)$/;"	m	class:pcl::CurvatureEstimationTaubin
num_threads	handle_detector/include/handle_detector/affordances.h	/^		int num_threads;$/;"	m	class:Affordances
num_threads_	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  unsigned int num_threads_; \/\/ number of threads for parallelization$/;"	m	class:pcl::CurvatureEstimationTaubin
num_x	handle_tracking/src/scanning_test.cpp	/^int num_x=12;$/;"	v
num_y	handle_tracking/src/scanning_test.cpp	/^int num_y=12;$/;"	v
oMw	vision_visp/visp_tracker/scripts/tf_localization.py	/^oMw = np.linalg.inv(wMo)$/;"	v
objectPositionHintCallback	vision_visp/visp_tracker/src/libvisp_tracker/tracker.cpp	/^  Tracker::objectPositionHintCallback$/;"	f	class:visp_tracker::Tracker
objectPositionHintSubscriber_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    ros::Subscriber objectPositionHintSubscriber_;$/;"	m	class:visp_tracker::Tracker
objectPositionHint_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    geometry_msgs::TransformStamped objectPositionHint_;$/;"	m	class:visp_tracker::Tracker
object_cloud_msg	object_registration/test/test_object_localize_service.cpp	/^sensor_msgs::PointCloud2 object_cloud_msg;$/;"	v
object_localize	object_registration/src/object_localize_service.cpp	/^bool object_localize(const PointCloudT::Ptr& object_in, const PointCloudT::Ptr& scene_in, geometry_msgs::Pose& relative_pose){$/;"	f
object_localize_client	door_recognition/src/findit.cpp	/^ros::ServiceClient object_localize_client;$/;"	v
object_localize_client	object_registration/test/test_object_localize_service.cpp	/^ros::ServiceClient      object_localize_client;$/;"	v
object_trans_cloud_pub	door_recognition/src/findit.cpp	/^    ros::Publisher object_trans_cloud_pub;$/;"	v
object_transformed_cloud_msg	door_recognition/src/findit.cpp	/^sensor_msgs::PointCloud2 object_transformed_cloud_msg;    $/;"	v
object_transformed_cloud_msg	object_registration/test/test_object_localize_service.cpp	/^sensor_msgs::PointCloud2 object_transformed_cloud_msg;    $/;"	v
onInit	vision_visp/visp_tracker/src/nodelets/client.cpp	/^    virtual void onInit ()$/;"	f	class:visp_tracker::TrackerClientNodelet
onInit	vision_visp/visp_tracker/src/nodelets/tracker.cpp	/^    virtual void onInit ()$/;"	f	class:visp_tracker::TrackerNodelet
onInit	vision_visp/visp_tracker/src/nodelets/viewer.cpp	/^    virtual void onInit ()$/;"	f	class:visp_tracker::TrackerViewerNodelet
on_entry	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      void on_entry(Event const&, Fsm& fsm)$/;"	f	struct:tracking::DetectFlashcodeGeneric
on_entry	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      void on_entry(Event const&, Fsm& fsm)$/;"	f	struct:tracking::DetectModel
on_entry	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      void on_entry(Event const&, Fsm& fsm){$/;"	f	struct:tracking::WaitingForInput
on_entry	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      void on_entry(finished const& evt, Fsm& fsm){}$/;"	f	struct:tracking::DetectFlashcodeGeneric
on_entry	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      void on_entry(finished const& evt, Fsm& fsm){}$/;"	f	struct:tracking::DetectModel
on_entry	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    void on_entry(Event const& evt, Fsm& fsm)$/;"	f	class:tracking::TrackModel
on_entry	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    void on_entry(Event const& evt, Fsm& fsm){$/;"	f	struct:tracking::Finished
on_entry	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    void on_entry(Event const&, Fsm& fsm)$/;"	f	struct:tracking::ReDetectFlashcode
on_entry	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    void on_entry(finished const& evt, Fsm& fsm){$/;"	f	class:tracking::TrackModel
on_exit	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      void on_exit(Event const& evt, Fsm& fsm)$/;"	f	struct:tracking::DetectFlashcodeGeneric
on_exit	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      void on_exit(Event const& evt, Fsm& fsm)$/;"	f	struct:tracking::DetectModel
on_exit	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      void on_exit(Event const& evt, Fsm& fsm){$/;"	f	struct:tracking::WaitingForInput
on_exit	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      void on_exit(finished const& evt, Fsm& fsm){}$/;"	f	struct:tracking::DetectFlashcodeGeneric
on_exit	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^      void on_exit(finished const& evt, Fsm& fsm){}$/;"	f	struct:tracking::DetectModel
on_exit	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    void on_exit(Event const& evt, Fsm& fsm)$/;"	f	class:tracking::TrackModel
on_exit	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    void on_exit(finished const& evt, Fsm& fsm){}$/;"	f	class:tracking::TrackModel
operator ()	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/threading.cpp	/^void TrackerThread::operator()(){$/;"	f	class:TrackerThread
operator *	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^vpQuaternionVector vpQuaternionVector::operator* ( vpQuaternionVector &rq) {	$/;"	f	class:vpQuaternionVector
operator *	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^vpQuaternionVector vpQuaternionVector::operator*( double l) $/;"	f	class:vpQuaternionVector
operator +	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^vpQuaternionVector vpQuaternionVector::operator+( vpQuaternionVector &q)  $/;"	f	class:vpQuaternionVector
operator -	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^vpQuaternionVector vpQuaternionVector::operator-( vpQuaternionVector &q)  $/;"	f	class:vpQuaternionVector
operator -	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^vpQuaternionVector vpQuaternionVector::operator-()  $/;"	f	class:vpQuaternionVector
operator =	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^vpQuaternionVector &vpQuaternionVector::operator=( vpQuaternionVector &q)$/;"	f	class:vpQuaternionVector
outer_coordinates	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::vector<double> flashcode_coordinates,inner_coordinates,outer_coordinates;$/;"	m	class:CmdLine
outer_points_3D_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::vector<vpPoint> inner_points_3D_,outer_points_3D_;$/;"	m	class:CmdLine
outer_points_3D_bcp_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    std::vector<vpPoint> outer_points_3D_bcp_;$/;"	m	class:tracking::Tracker_
outer_ratio_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  double outer_ratio_;$/;"	m	class:CmdLine
pattern_name_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::string pattern_name_;$/;"	m	class:CmdLine
pause_image_	vision_visp/visp_camera_calibration/src/image_processing.h	/^  bool pause_image_;$/;"	m	class:visp_camera_calibration::ImageProcessing
pcl	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^namespace pcl$/;"	n
pcl_dh_pub	door_handle_detection/include/door_handle_detection.h	/^  ros::Publisher pcl_dh_pub;$/;"	m	class:DoorHandleDetectionNode
pcl_frame_sub	door_handle_detection/include/door_handle_detection.h	/^  ros::Subscriber pcl_frame_sub;$/;"	m	class:DoorHandleDetectionNode
pcl_plane_pub	door_handle_detection/include/door_handle_detection.h	/^  ros::Publisher pcl_plane_pub;$/;"	m	class:DoorHandleDetectionNode
plot_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    vpPlot* plot_;$/;"	m	class:tracking::TrackModel
pointCorrespondenceCallback	vision_visp/visp_camera_calibration/src/calibrator.cpp	/^  void Calibrator::pointCorrespondenceCallback(const visp_camera_calibration::CalibPointArray::ConstPtr& point_correspondence){$/;"	f	class:visp_camera_calibration::Calibrator
point_correspondence_publisher_	vision_visp/visp_camera_calibration/src/image_processing.h	/^  ros::Publisher point_correspondence_publisher_;$/;"	m	class:visp_camera_calibration::ImageProcessing
point_correspondence_subscriber_	vision_visp/visp_camera_calibration/src/calibrator.h	/^    ros::Subscriber             point_correspondence_subscriber_;$/;"	m	class:visp_camera_calibration::Calibrator
point_correspondence_subscriber_callback_t	vision_visp/visp_camera_calibration/src/calibrator.h	/^      point_correspondence_subscriber_callback_t;$/;"	t	class:visp_camera_calibration::Calibrator
point_handle_pub	door_handle_detection/include/door_handle_detection.h	/^  ros::Publisher point_handle_pub;$/;"	m	class:DoorHandleDetectionNode
pointcloud_pub	object_registration/src/interest_box_marker.cpp	/^ros::Publisher  pointcloud_pub;$/;"	v
points3D_inner_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    std::vector<vpPoint> points3D_inner_;$/;"	m	class:tracking::Tracker_
points3D_middle_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    std::vector<vpPoint> points3D_middle_;$/;"	m	class:tracking::Tracker_
points3D_outer_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    std::vector<vpPoint> points3D_outer_;$/;"	m	class:tracking::Tracker_
points_t	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    typedef std::vector<vpPoint> points_t;$/;"	t	class:visp_tracker::TrackerClient
polygon_	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/detector_base.h	/^    std::vector<cv::Point> polygon_;$/;"	m	class:detectors::DetectorBase
pose_handle_pub	door_handle_detection/include/door_handle_detection.h	/^  ros::Publisher pose_handle_pub;$/;"	m	class:DoorHandleDetectionNode
prob_rand_samples	handle_detector/include/handle_detector/sampling.h	/^  double prob_rand_samples;$/;"	m	class:Sampling
processFeedback	object_registration/src/interest_box_marker.cpp	/^void processFeedback(const visualization_msgs::InteractiveMarkerFeedbackConstPtr &feedback){$/;"	f
processFeedbackArrow	object_registration/src/interest_box_marker.cpp	/^void processFeedbackArrow(const visualization_msgs::InteractiveMarkerFeedbackConstPtr &feedback){$/;"	f
prog_args	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  po::options_description prog_args;$/;"	m	class:CmdLine
protected	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	17;"	d	file:
protected	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	22;"	d	file:
protected	vision_visp/visp_tracker/src/libvisp_tracker/conversion.hh	16;"	d
protected	vision_visp/visp_tracker/src/libvisp_tracker/conversion.hh	22;"	d
protected	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	26;"	d	file:
protected	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	30;"	d	file:
qrcode	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/qrcode/detector.cpp	/^namespace qrcode{$/;"	n	namespace:detectors	file:
qrcode	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/qrcode/detector.h	/^namespace qrcode{$/;"	n	namespace:detectors
queueSize_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    unsigned queueSize_;$/;"	m	class:visp_tracker::TrackerClient
queueSize_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    unsigned queueSize_;$/;"	m	class:visp_tracker::TrackerViewer
queueSize_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    unsigned queueSize_;$/;"	m	class:visp_tracker::Tracker
queue_size_	vision_visp/visp_auto_tracker/src/node.h	/^                unsigned long queue_size_;$/;"	m	class:visp_auto_tracker::Node
queue_size_	vision_visp/visp_camera_calibration/src/calibrator.h	/^    unsigned long               queue_size_;$/;"	m	class:visp_camera_calibration::Calibrator
queue_size_	vision_visp/visp_camera_calibration/src/camera.h	/^  unsigned int queue_size_;$/;"	m	class:visp_camera_calibration::Camera
queue_size_	vision_visp/visp_camera_calibration/src/image_processing.h	/^  unsigned long queue_size_;$/;"	m	class:visp_camera_calibration::ImageProcessing
queue_size_	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^    unsigned int queue_size_;$/;"	m	class:visp_hand2eye_calibration::Calibrator
qw	door_recognition/src/findit.cpp	/^double qw;$/;"	v
qx	door_recognition/src/findit.cpp	/^double qx;$/;"	v
qy	door_recognition/src/findit.cpp	/^double qy;$/;"	v
qz	door_recognition/src/findit.cpp	/^double qz;$/;"	v
r	vision_visp/visp_bridge/include/visp_bridge/vpQuaternionVector.h	/^  double r[4];$/;"	m	class:vpQuaternionVector
radius	handle_detector/include/handle_detector/cylindrical_shell.h	/^  double radius;$/;"	m	class:CylindricalShell
radius_error	handle_detector/include/handle_detector/affordances.h	/^		double radius_error;$/;"	m	class:Affordances
rawImageCallback	vision_visp/visp_camera_calibration/src/image_processing.cpp	/^void ImageProcessing::rawImageCallback(const sensor_msgs::Image::ConstPtr& image){$/;"	f	class:visp_camera_calibration::ImageProcessing
raw_image_publisher_	vision_visp/visp_camera_calibration/src/camera.h	/^  ros::Publisher raw_image_publisher_;$/;"	m	class:visp_camera_calibration::Camera
raw_image_subscriber_	vision_visp/visp_camera_calibration/src/image_processing.h	/^  ros::Subscriber raw_image_subscriber_;$/;"	m	class:visp_camera_calibration::ImageProcessing
raw_image_subscriber_callback_t	vision_visp/visp_camera_calibration/src/image_processing.h	/^    raw_image_subscriber_callback_t;$/;"	t	class:visp_camera_calibration::ImageProcessing
reInitViewerCommonParameters	vision_visp/visp_tracker/src/libvisp_tracker/callbacks.cpp	/^void reInitViewerCommonParameters(ros::NodeHandle& nh,$/;"	f
reader_	vision_visp/visp_camera_calibration/src/camera.h	/^  vpVideoReader reader_;$/;"	m	class:visp_camera_calibration::Camera
reconfigureCallback	vision_visp/visp_tracker/src/libvisp_tracker/callbacks.cpp	/^void reconfigureCallback(vpMbTracker* tracker,$/;"	f
reconfigureCallback	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^  TrackerViewer::reconfigureCallback(visp_tracker::Init::Request& req,$/;"	f	class:visp_tracker::TrackerViewer
reconfigureCallbackAndInitViewer	vision_visp/visp_tracker/src/libvisp_tracker/callbacks.cpp	/^void reconfigureCallbackAndInitViewer(ros::NodeHandle& nh,$/;"	f
reconfigureCallback_t	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    reconfigureCallback_t;$/;"	t	class:visp_tracker::TrackerViewer
reconfigureEdgeCallback	vision_visp/visp_tracker/src/libvisp_tracker/callbacks.cpp	/^void reconfigureEdgeCallback(vpMbTracker* tracker,$/;"	f
reconfigureEdgeCallbackAndInitViewer	vision_visp/visp_tracker/src/libvisp_tracker/callbacks.cpp	/^void reconfigureEdgeCallbackAndInitViewer(ros::NodeHandle& nh,$/;"	f
reconfigureEdgeSrv_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    reconfigureSrvStruct<visp_tracker::ModelBasedSettingsEdgeConfig>::reconfigureSrv_t *reconfigureEdgeSrv_;$/;"	m	class:visp_tracker::TrackerClient
reconfigureEdgeSrv_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    reconfigureSrvStruct<visp_tracker::ModelBasedSettingsEdgeConfig>::reconfigureSrv_t *reconfigureEdgeSrv_;$/;"	m	class:visp_tracker::Tracker
reconfigureKltCallback	vision_visp/visp_tracker/src/libvisp_tracker/callbacks.cpp	/^void reconfigureKltCallback(vpMbTracker* tracker,$/;"	f
reconfigureKltCallbackAndInitViewer	vision_visp/visp_tracker/src/libvisp_tracker/callbacks.cpp	/^void reconfigureKltCallbackAndInitViewer(ros::NodeHandle& nh,$/;"	f
reconfigureKltSrv_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    reconfigureSrvStruct<visp_tracker::ModelBasedSettingsKltConfig>::reconfigureSrv_t *reconfigureKltSrv_;$/;"	m	class:visp_tracker::TrackerClient
reconfigureKltSrv_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    reconfigureSrvStruct<visp_tracker::ModelBasedSettingsKltConfig>::reconfigureSrv_t *reconfigureKltSrv_;$/;"	m	class:visp_tracker::Tracker
reconfigureService_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    ros::ServiceServer reconfigureService_;$/;"	m	class:visp_tracker::TrackerViewer
reconfigureSrvStruct	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    struct reconfigureSrvStruct{$/;"	s	class:visp_tracker::TrackerClient
reconfigureSrvStruct	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    struct reconfigureSrvStruct{$/;"	s	class:visp_tracker::Tracker
reconfigureSrv_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    reconfigureSrvStruct<visp_tracker::ModelBasedSettingsConfig>::reconfigureSrv_t *reconfigureSrv_;$/;"	m	class:visp_tracker::TrackerClient
reconfigureSrv_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    reconfigureSrvStruct<visp_tracker::ModelBasedSettingsConfig>::reconfigureSrv_t *reconfigureSrv_;$/;"	m	class:visp_tracker::Tracker
reconfigureSrv_t	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^      typedef dynamic_reconfigure::Server<ConfigType> reconfigureSrv_t;$/;"	t	struct:visp_tracker::TrackerClient::reconfigureSrvStruct
reconfigureSrv_t	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^      typedef dynamic_reconfigure::Server<ConfigType> reconfigureSrv_t;$/;"	t	struct:visp_tracker::Tracker::reconfigureSrvStruct
rectifiedImageTopic_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    std::string rectifiedImageTopic_;$/;"	m	class:visp_tracker::TrackerClient
rectifiedImageTopic_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    std::string rectifiedImageTopic_;$/;"	m	class:visp_tracker::TrackerViewer
rectifiedImageTopic_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    std::string rectifiedImageTopic_;$/;"	m	class:visp_tracker::Tracker
remap	vision_visp/visp_camera_calibration/src/names.cpp	/^  void remap(){$/;"	f	namespace:visp_camera_calibration
remap	vision_visp/visp_hand2eye_calibration/src/names.cpp	/^  void remap(){$/;"	f	namespace:visp_hand2eye_calibration
resetCallback	vision_visp/visp_hand2eye_calibration/src/calibrator.cpp	/^  bool Calibrator::resetCallback(visp_hand2eye_calibration::reset::Request &req,$/;"	f	class:visp_hand2eye_calibration::Calibrator
reset_comm	vision_visp/visp_hand2eye_calibration/src/client.h	/^    visp_hand2eye_calibration::reset reset_comm;$/;"	m	class:visp_hand2eye_calibration::Client
reset_service_	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^    ros::ServiceServer reset_service_;$/;"	m	class:visp_hand2eye_calibration::Calibrator
reset_service_	vision_visp/visp_hand2eye_calibration/src/client.h	/^    ros::ServiceClient reset_service_;$/;"	m	class:visp_hand2eye_calibration::Client
reset_service_callback_t	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^      reset_service_callback_t;$/;"	t	class:visp_hand2eye_calibration::Calibrator
resourceRetriever_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    resource_retriever::Retriever resourceRetriever_;$/;"	m	class:visp_tracker::TrackerClient
resultPublisher_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    ros::Publisher resultPublisher_;$/;"	m	class:visp_tracker::Tracker
rosImageToVisp	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^void rosImageToVisp(vpImage<unsigned char>& dst,$/;"	f
rot2euler	door_handle_detection/src/door_handle_detection.cpp	/^cv::Mat rot2euler(const cv::Mat & rotationMatrix)$/;"	f
run_icp_on_pc	object_registration/src/object_localize_service.cpp	/^void run_icp_on_pc(const PointCloudT::Ptr& cloud_in, $/;"	f
saveInitialPose	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::saveInitialPose(const vpHomogeneousMatrix& cMo)$/;"	f	class:visp_tracker::TrackerClient
scanner_	vision_visp/visp_auto_tracker/flashcode_mbt/detectors/qrcode/detector.h	/^    zbar::ImageScanner scanner_;$/;"	m	class:detectors::qrcode::Detector
scene_cloud_msg	object_registration/test/test_object_localize_service.cpp	/^sensor_msgs::PointCloud2 scene_cloud_msg;$/;"	v
searchAffordances	handle_detector/src/affordances.cpp	/^std::vector<CylindricalShell> Affordances::searchAffordances(const PointCloud::Ptr &cloud,$/;"	f	class:Affordances
searchAffordances	handle_detector/src/sampling.cpp	/^std::vector<CylindricalShell> Sampling::searchAffordances(const PointCloud::Ptr &cloud,$/;"	f	class:Sampling
searchAffordancesNormalsOrPCA	handle_detector/src/affordances.cpp	/^std::vector<CylindricalShell> Affordances::searchAffordancesNormalsOrPCA(const PointCloud::Ptr &cloud,$/;"	f	class:Affordances
searchAffordancesTaubin	handle_detector/src/affordances.cpp	/^std::vector<CylindricalShell> Affordances::searchAffordancesTaubin(const PointCloud::Ptr &cloud,$/;"	f	class:Affordances
searchHandles	handle_detector/src/affordances.cpp	/^std::vector<std::vector<CylindricalShell> > Affordances::searchHandles(const PointCloud::Ptr &cloud,$/;"	f	class:Affordances
select_input	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/events.h	/^    select_input(vpImage<vpRGBa>& I) : I(I){}$/;"	f	struct:tracking::select_input
select_input	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/events.h	/^  struct select_input{$/;"	s	namespace:tracking
selected_points_	vision_visp/visp_camera_calibration/src/calibrator.h	/^    std::vector<vpPoint>        selected_points_;$/;"	m	class:visp_camera_calibration::Calibrator
selected_points_	vision_visp/visp_camera_calibration/src/image_processing.h	/^  std::vector<vpPoint> selected_points_;$/;"	m	class:visp_camera_calibration::ImageProcessing
sendVideo	vision_visp/visp_camera_calibration/src/camera.cpp	/^void Camera::sendVideo(){$/;"	f	class:visp_camera_calibration::Camera
sendcMo	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::sendcMo(const vpHomogeneousMatrix& cMo)$/;"	f	class:visp_tracker::TrackerClient
server	object_registration/src/interest_box_marker.cpp	/^boost::shared_ptr<interactive_markers::InteractiveMarkerServer> server;$/;"	v
set	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^void vpQuaternionVector::set(const double x, const double y, $/;"	f	class:vpQuaternionVector
setAffordances	handle_detector/include/handle_detector/sampling.h	/^  void setAffordances(Affordances &affordances)$/;"	f	class:Sampling
setCameraInfoBisCallback	vision_visp/visp_camera_calibration/src/image_processing.cpp	/^bool ImageProcessing::setCameraInfoBisCallback(sensor_msgs::SetCameraInfo::Request  &req,$/;"	f	class:visp_camera_calibration::ImageProcessing
setCameraInfoCallback	vision_visp/visp_camera_calibration/src/camera.cpp	/^bool Camera::setCameraInfoCallback(sensor_msgs::SetCameraInfo::Request  &req,$/;"	f	class:visp_camera_calibration::Camera
setExtent	handle_detector/include/handle_detector/cylindrical_shell.h	/^  inline void setExtent(double extent)$/;"	f	class:CylindricalShell
setNavTarget_pub	handle_tracking/include/object_scan.h	/^	ros::Publisher setNavTarget_pub;$/;"	m	class:Handle_manager
setNeighborhoodCentroidIndex	handle_detector/include/handle_detector/cylindrical_shell.h	/^  inline void setNeighborhoodCentroidIndex(int index)$/;"	f	class:CylindricalShell
setNumSamples	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  inline void setNumSamples(int num_samples)$/;"	f	class:pcl::CurvatureEstimationTaubin
setNumThreads	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  inline void setNumThreads(int num_threads)$/;"	f	class:pcl::CurvatureEstimationTaubin
set_camera_info_bis_service_	vision_visp/visp_camera_calibration/src/calibrator.h	/^    ros::ServiceClient          set_camera_info_bis_service_;$/;"	m	class:visp_camera_calibration::Calibrator
set_camera_info_bis_service_	vision_visp/visp_camera_calibration/src/image_processing.h	/^  ros::ServiceServer set_camera_info_bis_service_;$/;"	m	class:visp_camera_calibration::ImageProcessing
set_camera_info_bis_service_callback_t	vision_visp/visp_camera_calibration/src/image_processing.h	/^      set_camera_info_bis_service_callback_t;$/;"	t	class:visp_camera_calibration::ImageProcessing
set_camera_info_service_	vision_visp/visp_camera_calibration/src/calibrator.h	/^    ros::ServiceClient          set_camera_info_service_;$/;"	m	class:visp_camera_calibration::Calibrator
set_camera_info_service_	vision_visp/visp_camera_calibration/src/camera.h	/^  ros::ServiceServer set_camera_info_service_;$/;"	m	class:visp_camera_calibration::Camera
set_camera_info_service_callback_t	vision_visp/visp_camera_calibration/src/camera.h	/^    set_camera_info_service_callback_t;$/;"	t	class:visp_camera_calibration::Camera
set_code_message	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^void CmdLine:: set_code_message(const std::string &msg)$/;"	f	class:CmdLine
set_code_message_index	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^void CmdLine:: set_code_message_index(const size_t &index)$/;"	f	class:CmdLine
set_data_directory	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^void CmdLine:: set_data_directory(std::string &dir){$/;"	f	class:CmdLine
set_flush_display	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  void Tracker_:: set_flush_display(bool val){$/;"	f	class:tracking::Tracker_
set_pattern_name	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^void CmdLine:: set_pattern_name(std::string &name){$/;"	f	class:CmdLine
set_show_fps	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^void CmdLine:: set_show_fps(bool show_fps){$/;"	f	class:CmdLine
setupCameraParameters	door_handle_detection/src/door_handle_detection.cpp	/^void DoorHandleDetectionNode::setupCameraParameters(const sensor_msgs::CameraInfoConstPtr &cam_rgb)$/;"	f	class:DoorHandleDetectionNode
should_exit	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: should_exit() const{$/;"	f	class:CmdLine
should_exit_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  bool should_exit_;$/;"	m	class:CmdLine
show_fps	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: show_fps() const{$/;"	f	class:CmdLine
show_fps_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  bool show_fps_;$/;"	m	class:CmdLine
show_plot	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: show_plot() const{$/;"	f	class:CmdLine
show_plot_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  bool show_plot_;$/;"	m	class:CmdLine
sig_handler	handle_tracking/src/scanning_test.cpp	/^void sig_handler(int sig)$/;"	f
sig_handler	object_registration/src/interest_box_marker.cpp	/^void sig_handler(int sig)$/;"	f
sign	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  inline int sign(double x)$/;"	f	class:pcl::CurvatureEstimationTaubin
single_image_name_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::string single_image_name_;$/;"	m	class:CmdLine
sites_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    visp_tracker::MovingEdgeSites::ConstPtr sites_;$/;"	m	class:visp_tracker::TrackerViewer
size	vision_visp/visp_bridge/include/visp_bridge/vpQuaternionVector.h	/^  unsigned int size(){return 4;}$/;"	f	class:vpQuaternionVector
solveGeneralizedEigenProblem	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  inline bool solveGeneralizedEigenProblem(const Eigen::MatrixXd& A, const Eigen::MatrixXd& B, Eigen::MatrixXd& v,$/;"	f	class:pcl::CurvatureEstimationTaubin
spin	door_handle_detection/src/door_handle_detection.cpp	/^void DoorHandleDetectionNode::spin()$/;"	f	class:DoorHandleDetectionNode
spin	vision_visp/visp_auto_tracker/src/node.cpp	/^        void Node::spin(){$/;"	f	class:visp_auto_tracker::Node
spin	vision_visp/visp_camera_calibration/src/calibrator.cpp	/^  void Calibrator::spin(){$/;"	f	class:visp_camera_calibration::Calibrator
spin	vision_visp/visp_hand2eye_calibration/src/calibrator.cpp	/^  void Calibrator::spin()$/;"	f	class:visp_hand2eye_calibration::Calibrator
spin	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::spin()$/;"	f	class:visp_tracker::TrackerClient
spin	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^  TrackerViewer::spin()$/;"	f	class:visp_tracker::TrackerViewer
spin	vision_visp/visp_tracker/src/libvisp_tracker/tracker.cpp	/^  void Tracker::spin()$/;"	f	class:visp_tracker::Tracker
spin	vision_visp/visp_tracker/src/nodelets/client.cpp	/^    void spin ()$/;"	f	class:visp_tracker::TrackerClientNodelet
spin	vision_visp/visp_tracker/src/nodelets/tracker.cpp	/^    void spin ()$/;"	f	class:visp_tracker::TrackerNodelet
spin	vision_visp/visp_tracker/src/nodelets/viewer.cpp	/^    void spin ()$/;"	f	class:visp_tracker::TrackerViewerNodelet
spinOnce	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    void spinOnce ()$/;"	f	class:visp_tracker::Tracker
spinner	vision_visp/visp_camera_calibration/src/camera.h	/^  ros::AsyncSpinner spinner;$/;"	m	class:visp_camera_calibration::Camera
spinner_	vision_visp/visp_camera_calibration/src/image_processing.h	/^  ros::AsyncSpinner spinner_;$/;"	m	class:visp_camera_calibration::ImageProcessing
srv	door_recognition/src/findit.cpp	/^door_recognition::ObjectLocalize srv; $/;"	v
startFromSavedPose_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    bool startFromSavedPose_;$/;"	m	class:visp_tracker::TrackerClient
state_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    State state_;$/;"	m	class:visp_tracker::Tracker
statistics	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    statistics_t statistics;$/;"	m	class:tracking::Tracker_
statistics_t	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    } statistics_t;$/;"	t	class:tracking::Tracker_	typeref:struct:tracking::Tracker_::__anon2
storeCloudInfo	object_registration/src/interest_box_marker.cpp	/^bool storeCloudInfo(){$/;"	f
stored_cloud_topic	object_registration/src/interest_box_marker.cpp	/^std::string stored_cloud_topic = STORED_CLOUD_PUB_NAME;$/;"	v
storedcloud_pub	object_registration/src/interest_box_marker.cpp	/^ros::Publisher  storedcloud_pub;$/;"	v
syncPolicy_t	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^      > syncPolicy_t;$/;"	t	class:visp_tracker::TrackerViewer
synchronizer_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    message_filters::Synchronizer<syncPolicy_t> synchronizer_;$/;"	m	class:visp_tracker::TrackerViewer
t_	vision_visp/visp_auto_tracker/src/node.h	/^                tracking::Tracker* t_;$/;"	m	class:visp_auto_tracker::Node
target_radius	handle_detector/include/handle_detector/affordances.h	/^		double target_radius;$/;"	m	class:Affordances
test_service_call	object_registration/test/test_object_localize_service.cpp	/^void test_service_call(){$/;"	f
tfBroadcaster_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    tf::TransformBroadcaster tfBroadcaster_;$/;"	m	class:visp_tracker::Tracker
tf_listener	door_recognition/src/findit.cpp	/^tf::TransformListener *tf_listener;$/;"	v
tf_listener	object_registration/src/interest_box_marker.cpp	/^tf::TransformListener *tf_listener;$/;"	v
thread_	vision_visp/visp_tracker/src/nodelets/client.cpp	/^    boost::shared_ptr<boost::thread> thread_;$/;"	m	class:visp_tracker::TrackerClientNodelet	file:
thread_	vision_visp/visp_tracker/src/nodelets/tracker.cpp	/^    boost::shared_ptr<boost::thread> thread_;$/;"	m	class:visp_tracker::TrackerNodelet	file:
thread_	vision_visp/visp_tracker/src/nodelets/viewer.cpp	/^    boost::shared_ptr<boost::thread> thread_;$/;"	m	class:visp_tracker::TrackerViewerNodelet	file:
time_curvature	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  double time_curvature;$/;"	m	class:pcl::CurvatureEstimationTaubin
time_taubin	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  double time_taubin;$/;"	m	class:pcl::CurvatureEstimationTaubin
timerCallback	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^  TrackerViewer::timerCallback()$/;"	f	class:visp_tracker::TrackerViewer
timer_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    ros::WallTimer timer_;$/;"	m	class:visp_tracker::TrackerViewer
tl	vision_visp/visp_tracker/scripts/tf_localization.py	/^tl = tf.TransformListener()$/;"	v
toGeometryMsgsPose	vision_visp/visp_bridge/src/conversions/3dpose.cpp	/^  geometry_msgs::Pose toGeometryMsgsPose(const vpHomogeneousMatrix& mat){$/;"	f	namespace:visp_bridge
toGeometryMsgsTransform	vision_visp/visp_bridge/src/conversions/3dpose.cpp	/^  geometry_msgs::Transform toGeometryMsgsTransform(const vpHomogeneousMatrix& mat){$/;"	f	namespace:visp_bridge
toSensorMsgsCameraInfo	vision_visp/visp_bridge/src/conversions/camera.cpp	/^  sensor_msgs::CameraInfo toSensorMsgsCameraInfo(vpCameraParameters& cam_info, unsigned int cam_image_width, unsigned int cam_image_height ){$/;"	f	namespace:visp_bridge
toSensorMsgsImage	vision_visp/visp_bridge/src/conversions/image.cpp	/^sensor_msgs::Image toSensorMsgsImage(const vpImage<unsigned char>& src)$/;"	f	namespace:visp_bridge
toSensorMsgsImage	vision_visp/visp_bridge/src/conversions/image.cpp	/^sensor_msgs::Image toSensorMsgsImage(const vpImage<vpRGBa>& src){$/;"	f	namespace:visp_bridge
toVispCameraParameters	vision_visp/visp_bridge/src/conversions/camera.cpp	/^vpCameraParameters toVispCameraParameters(const sensor_msgs::CameraInfo& cam_info){$/;"	f	namespace:visp_bridge
toVispHomogeneousMatrix	vision_visp/visp_bridge/src/conversions/3dpose.cpp	/^  vpHomogeneousMatrix toVispHomogeneousMatrix(const geometry_msgs::Pose& pose){$/;"	f	namespace:visp_bridge
toVispHomogeneousMatrix	vision_visp/visp_bridge/src/conversions/3dpose.cpp	/^  vpHomogeneousMatrix toVispHomogeneousMatrix(const geometry_msgs::Transform& trans){$/;"	f	namespace:visp_bridge
toVispImage	vision_visp/visp_bridge/src/conversions/image.cpp	/^vpImage<unsigned char> toVispImage(const sensor_msgs::Image& src)$/;"	f	namespace:visp_bridge
toVispImageRGBa	vision_visp/visp_bridge/src/conversions/image.cpp	/^vpImage<vpRGBa> toVispImageRGBa(const sensor_msgs::Image& src)$/;"	f	namespace:visp_bridge
tr	vision_visp/visp_tracker/scripts/tf_localization.py	/^tr = tf.TransformerROS()$/;"	v
track_model	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  void Tracker_:: track_model(input_ready const& evt){$/;"	f	class:tracking::Tracker_
trackerClient_	vision_visp/visp_tracker/src/nodelets/client.cpp	/^    boost::shared_ptr<visp_tracker::TrackerClient> trackerClient_;$/;"	m	class:visp_tracker::TrackerClientNodelet	file:
trackerName_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    std::string trackerName_;$/;"	m	class:visp_tracker::TrackerViewer
trackerType_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    std::string trackerType_;$/;"	m	class:visp_tracker::TrackerClient
trackerType_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    std::string trackerType_;$/;"	m	class:visp_tracker::Tracker
trackerViewer_	vision_visp/visp_tracker/src/nodelets/viewer.cpp	/^    boost::shared_ptr<visp_tracker::TrackerViewer> trackerViewer_;$/;"	m	class:visp_tracker::TrackerViewerNodelet	file:
tracker_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/threading.h	/^  tracking::Tracker& tracker_;$/;"	m	class:TrackerThread
tracker_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    vpMbTracker* tracker_; \/\/ Create a model based tracker.$/;"	m	class:tracking::Tracker_
tracker_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^    vpMbTracker *tracker_;$/;"	m	class:visp_tracker::TrackerClient
tracker_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    vpMbEdgeTracker tracker_;$/;"	m	class:visp_tracker::TrackerViewer
tracker_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    vpMbTracker* tracker_;$/;"	m	class:visp_tracker::Tracker
tracker_	vision_visp/visp_tracker/src/nodelets/tracker.cpp	/^    boost::shared_ptr<visp_tracker::Tracker> tracker_;$/;"	m	class:visp_tracker::TrackerNodelet	file:
tracker_config_path_	vision_visp/visp_auto_tracker/src/node.h	/^                std::string tracker_config_path_;$/;"	m	class:visp_auto_tracker::Node
tracker_me_config_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    vpMe tracker_me_config_;$/;"	m	class:tracking::Tracker_
tracking	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/events.h	/^namespace tracking{$/;"	n
tracking	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/logfilewriter.hpp	/^namespace tracking{$/;"	n
tracking	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^namespace tracking{$/;"	n
tracking	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^namespace tracking{$/;"	n	file:
tracking	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^namespace tracking{$/;"	n
trackingResultSubscriber_	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^    trackingResultSubscriber_;$/;"	m	class:visp_tracker::TrackerViewer
transformBroadcaster_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    tf::TransformBroadcaster transformBroadcaster_;$/;"	m	class:visp_tracker::Tracker
transformToVpHomogeneousMatrix	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^void transformToVpHomogeneousMatrix(vpHomogeneousMatrix& dst,$/;"	f
transformationPublisher_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    ros::Publisher transformationPublisher_;$/;"	m	class:visp_tracker::Tracker
transition_table	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    struct transition_table : mpl::vector<$/;"	s	class:tracking::Tracker_
tx	door_recognition/src/findit.cpp	/^double tx;$/;"	v
ty	door_recognition/src/findit.cpp	/^double ty;$/;"	v
tz	door_recognition/src/findit.cpp	/^double tz;$/;"	v
unpackQuadric	handle_detector/include/handle_detector/curvature_estimation_taubin.h	/^  inline void unpackQuadric(const Eigen::VectorXd &quadric_parameters, Eigen::Vector3d &quadric_centroid,$/;"	f	class:pcl::CurvatureEstimationTaubin
updateArrowLocations	object_registration/src/interest_box_marker.cpp	/^void updateArrowLocations(const geometry_msgs::Pose box_pose, $/;"	f
updateKalmanFilter	door_handle_detection/src/door_handle_detection.cpp	/^void updateKalmanFilter( cv::KalmanFilter &KF, cv::Mat &measurement, cv::Mat &translation_estimated, cv::Mat &rotation_estimated )$/;"	f
updateKltPoints	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  Tracker_::updateKltPoints(visp_tracker::KltPointsPtr klt)$/;"	f	class:tracking::Tracker_
updateKltPoints	vision_visp/visp_tracker/src/libvisp_tracker/tracker.cpp	/^  Tracker::updateKltPoints(visp_tracker::KltPointsPtr klt)$/;"	f	class:visp_tracker::Tracker
updateMovingEdgeSites	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.cpp	/^  Tracker_::updateMovingEdgeSites(visp_tracker::MovingEdgeSitesPtr sites)$/;"	f	class:tracking::Tracker_
updateMovingEdgeSites	vision_visp/visp_tracker/src/libvisp_tracker/tracker.cpp	/^  Tracker::updateMovingEdgeSites(visp_tracker::MovingEdgeSitesPtr sites)$/;"	f	class:visp_tracker::Tracker
use_clearance_filter	handle_detector/include/handle_detector/affordances.h	/^		bool use_clearance_filter;$/;"	m	class:Affordances
use_occlusion_filter	handle_detector/include/handle_detector/affordances.h	/^		bool use_occlusion_filter;$/;"	m	class:Affordances
using_adhoc_recovery	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: using_adhoc_recovery() const{$/;"	f	class:CmdLine
using_data_dir	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: using_data_dir() const{$/;"	f	class:CmdLine
using_hinkley	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: using_hinkley() const{$/;"	f	class:CmdLine
using_mbt_dynamic_range	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: using_mbt_dynamic_range(){$/;"	f	class:CmdLine
using_single_image	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: using_single_image() const{$/;"	f	class:CmdLine
using_var_file	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: using_var_file() const{$/;"	f	class:CmdLine
using_var_limit	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: using_var_limit() const{$/;"	f	class:CmdLine
using_video_camera	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.cpp	/^bool CmdLine:: using_video_camera() const{$/;"	f	class:CmdLine
validatePose	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::validatePose(const vpHomogeneousMatrix &cMo){$/;"	f	class:visp_tracker::TrackerClient
var	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^      > var,var_x,var_y,var_z,var_wx,var_wy,var_wz,checkpoints;$/;"	m	struct:tracking::Tracker_::__anon2
var_file_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::string var_file_;$/;"	m	class:CmdLine
var_limit_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  double var_limit_;$/;"	m	class:CmdLine
var_wx	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^      > var,var_x,var_y,var_z,var_wx,var_wy,var_wz,checkpoints;$/;"	m	struct:tracking::Tracker_::__anon2
var_wy	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^      > var,var_x,var_y,var_z,var_wx,var_wy,var_wz,checkpoints;$/;"	m	struct:tracking::Tracker_::__anon2
var_wz	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^      > var,var_x,var_y,var_z,var_wx,var_wy,var_wz,checkpoints;$/;"	m	struct:tracking::Tracker_::__anon2
var_x	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^      > var,var_x,var_y,var_z,var_wx,var_wy,var_wz,checkpoints;$/;"	m	struct:tracking::Tracker_::__anon2
var_y	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^      > var,var_x,var_y,var_z,var_wx,var_wy,var_wz,checkpoints;$/;"	m	struct:tracking::Tracker_::__anon2
var_z	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^      > var,var_x,var_y,var_z,var_wx,var_wy,var_wz,checkpoints;$/;"	m	struct:tracking::Tracker_::__anon2
varfile_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    std::ofstream varfile_;$/;"	m	class:tracking::Tracker_
verbose_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  bool verbose_;$/;"	m	class:CmdLine
video_channel_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  std::string video_channel_;$/;"	m	class:CmdLine
viewer	handle_detector/include/handle_detector/sampling_visualizer.h	/^  boost::shared_ptr<pcl::visualization::PCLVisualizer> viewer;$/;"	m	class:SamplingVisualizer
vispImageToRos	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^void vispImageToRos(sensor_msgs::Image& dst,$/;"	f
visp_auto_tracker	vision_visp/visp_auto_tracker/src/names.cpp	/^namespace visp_auto_tracker$/;"	n	file:
visp_auto_tracker	vision_visp/visp_auto_tracker/src/names.h	/^namespace visp_auto_tracker$/;"	n
visp_auto_tracker	vision_visp/visp_auto_tracker/src/node.cpp	/^namespace visp_auto_tracker{$/;"	n	file:
visp_auto_tracker	vision_visp/visp_auto_tracker/src/node.h	/^namespace visp_auto_tracker{$/;"	n
visp_bridge	vision_visp/visp_bridge/include/visp_bridge/3dpose.h	/^namespace visp_bridge{$/;"	n
visp_bridge	vision_visp/visp_bridge/include/visp_bridge/camera.h	/^namespace visp_bridge{$/;"	n
visp_bridge	vision_visp/visp_bridge/include/visp_bridge/image.h	/^namespace visp_bridge{$/;"	n
visp_bridge	vision_visp/visp_bridge/src/conversions/3dpose.cpp	/^namespace visp_bridge{$/;"	n	file:
visp_bridge	vision_visp/visp_bridge/src/conversions/camera.cpp	/^namespace visp_bridge{$/;"	n	file:
visp_bridge	vision_visp/visp_bridge/src/conversions/image.cpp	/^namespace visp_bridge$/;"	n	file:
visp_camera_calibration	vision_visp/visp_camera_calibration/src/calibrator.cpp	/^namespace visp_camera_calibration$/;"	n	file:
visp_camera_calibration	vision_visp/visp_camera_calibration/src/calibrator.h	/^namespace visp_camera_calibration$/;"	n
visp_camera_calibration	vision_visp/visp_camera_calibration/src/camera.cpp	/^namespace visp_camera_calibration$/;"	n	file:
visp_camera_calibration	vision_visp/visp_camera_calibration/src/camera.h	/^namespace visp_camera_calibration$/;"	n
visp_camera_calibration	vision_visp/visp_camera_calibration/src/image_processing.cpp	/^namespace visp_camera_calibration$/;"	n	file:
visp_camera_calibration	vision_visp/visp_camera_calibration/src/image_processing.h	/^namespace visp_camera_calibration$/;"	n
visp_camera_calibration	vision_visp/visp_camera_calibration/src/names.cpp	/^namespace visp_camera_calibration$/;"	n	file:
visp_camera_calibration	vision_visp/visp_camera_calibration/src/names.h	/^namespace visp_camera_calibration$/;"	n
visp_hand2eye_calibration	vision_visp/visp_hand2eye_calibration/src/calibrator.cpp	/^namespace visp_hand2eye_calibration$/;"	n	file:
visp_hand2eye_calibration	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^namespace visp_hand2eye_calibration{$/;"	n
visp_hand2eye_calibration	vision_visp/visp_hand2eye_calibration/src/client.cpp	/^namespace visp_hand2eye_calibration$/;"	n	file:
visp_hand2eye_calibration	vision_visp/visp_hand2eye_calibration/src/client.h	/^namespace visp_hand2eye_calibration{ $/;"	n
visp_hand2eye_calibration	vision_visp/visp_hand2eye_calibration/src/names.cpp	/^namespace visp_hand2eye_calibration$/;"	n	file:
visp_hand2eye_calibration	vision_visp/visp_hand2eye_calibration/src/names.h	/^namespace visp_hand2eye_calibration$/;"	n
visp_tracker	vision_visp/visp_tracker/src/libvisp_tracker/names.cpp	/^namespace visp_tracker$/;"	n	file:
visp_tracker	vision_visp/visp_tracker/src/libvisp_tracker/names.hh	/^namespace visp_tracker$/;"	n
visp_tracker	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^namespace visp_tracker$/;"	n	file:
visp_tracker	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.hh	/^namespace visp_tracker$/;"	n
visp_tracker	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^namespace visp_tracker$/;"	n	file:
visp_tracker	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.hh	/^namespace visp_tracker$/;"	n
visp_tracker	vision_visp/visp_tracker/src/libvisp_tracker/tracker.cpp	/^namespace visp_tracker$/;"	n	file:
visp_tracker	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^namespace visp_tracker$/;"	n
visp_tracker	vision_visp/visp_tracker/src/nodelets/client.cpp	/^namespace visp_tracker$/;"	n	file:
visp_tracker	vision_visp/visp_tracker/src/nodelets/tracker.cpp	/^namespace visp_tracker$/;"	n	file:
visp_tracker	vision_visp/visp_tracker/src/nodelets/viewer.cpp	/^namespace visp_tracker$/;"	n	file:
vm_	vision_visp/visp_auto_tracker/flashcode_mbt/cmd_line/cmd_line.h	/^  boost::program_options::variables_map vm_;$/;"	m	class:CmdLine
vpHomogeneousMatrixToTransform	vision_visp/visp_tracker/src/libvisp_tracker/conversion.cpp	/^void vpHomogeneousMatrixToTransform(geometry_msgs::Transform& dst,$/;"	f
vpQuaternionVector	vision_visp/visp_bridge/include/visp_bridge/vpQuaternionVector.h	/^class VISP_EXPORT vpQuaternionVector : public vpColVector$/;"	c
vpQuaternionVector	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^vpQuaternionVector::vpQuaternionVector() : vpColVector(4) { }$/;"	f	class:vpQuaternionVector
vpQuaternionVector	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^vpQuaternionVector::vpQuaternionVector(const double x, const double y, $/;"	f	class:vpQuaternionVector
vpQuaternionVector	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^vpQuaternionVector::vpQuaternionVector(const vpQuaternionVector &q) :$/;"	f	class:vpQuaternionVector
vpQuaternionVector	vision_visp/visp_bridge/src/compat/vpQuaternionVector.cpp	/^vpQuaternionVector::vpQuaternionVector(const vpRotationMatrix &R) :$/;"	f	class:vpQuaternionVector
vpTrackingBox_	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/tracking.h	/^    vpRect vpTrackingBox_;$/;"	m	class:tracking::Tracker_
w	vision_visp/visp_bridge/include/visp_bridge/vpQuaternionVector.h	/^  inline double w() const {return r[3];}$/;"	f	class:vpQuaternionVector
wMe_vec_	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^    std::vector<vpHomogeneousMatrix> wMe_vec_;$/;"	m	class:visp_hand2eye_calibration::Calibrator
wMo	vision_visp/visp_tracker/scripts/tf_localization.py	/^wMo = np.matrix(np.identity(4))$/;"	v
wMo	vision_visp/visp_tracker/scripts/tf_localization.py	/^wMo = np.matrix(tr.fromTranslationRotation(wMo_t, wMo_q))$/;"	v
wMo_q	vision_visp/visp_tracker/scripts/tf_localization.py	/^wMo_q = [0., 0., 0., 1.]$/;"	v
wMo_t	vision_visp/visp_tracker/scripts/tf_localization.py	/^wMo_t = [0., 0., 0.]$/;"	v
waitForImage	vision_visp/visp_auto_tracker/src/node.cpp	/^        void Node::waitForImage(){$/;"	f	class:visp_auto_tracker::Node
waitForImage	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::waitForImage()$/;"	f	class:visp_tracker::TrackerClient
waitForImage	vision_visp/visp_tracker/src/libvisp_tracker/tracker-viewer.cpp	/^  TrackerViewer::waitForImage()$/;"	f	class:visp_tracker::TrackerViewer
waitForImage	vision_visp/visp_tracker/src/libvisp_tracker/tracker.cpp	/^  Tracker::waitForImage()$/;"	f	class:visp_tracker::Tracker
window	ros-keyboard/src/keyboard.h	/^      SDL_Surface* window;$/;"	m	class:keyboard::Keyboard
workspaceFilter	handle_detector/src/affordances.cpp	/^PointCloud::Ptr Affordances::workspaceFilter(const PointCloud::Ptr &cloud_in, tf::StampedTransform *transform)$/;"	f	class:Affordances
workspaceFilter	handle_detector/src/affordances.cpp	/^PointCloudRGB::Ptr Affordances::workspaceFilter(const PointCloudRGB::Ptr &cloud_in, tf::StampedTransform *transform)$/;"	f	class:Affordances
workspace_limits	handle_detector/include/handle_detector/affordances.h	/^		WorkspaceLimits workspace_limits;$/;"	m	class:Affordances
worldEffectorCallback	vision_visp/visp_hand2eye_calibration/src/calibrator.cpp	/^  void Calibrator::worldEffectorCallback(const geometry_msgs::Transform::ConstPtr& trans)$/;"	f	class:visp_hand2eye_calibration::Calibrator
worldFrameId_	vision_visp/visp_tracker/src/libvisp_tracker/tracker.hh	/^    std::string worldFrameId_;$/;"	m	class:visp_tracker::Tracker
world_effector_publisher_	vision_visp/visp_hand2eye_calibration/src/client.h	/^    ros::Publisher world_effector_publisher_;$/;"	m	class:visp_hand2eye_calibration::Client
world_effector_subscriber_	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^    ros::Subscriber world_effector_subscriber_;$/;"	m	class:visp_hand2eye_calibration::Calibrator
world_effector_subscriber_t	vision_visp/visp_hand2eye_calibration/src/calibrator.h	/^      world_effector_subscriber_t;$/;"	t	class:visp_hand2eye_calibration::Calibrator
write	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/logfilewriter.hpp	/^    void write(T data){$/;"	f	class:tracking::LogFileWriter
x	vision_visp/visp_bridge/include/visp_bridge/vpQuaternionVector.h	/^  inline double x() const {return r[0];}$/;"	f	class:vpQuaternionVector
x_max	handle_detector/src/localization.cpp	/^double x_max = 10000;$/;"	v
y	vision_visp/visp_bridge/include/visp_bridge/vpQuaternionVector.h	/^  inline double y() const {return r[1];}$/;"	f	class:vpQuaternionVector
z	vision_visp/visp_bridge/include/visp_bridge/vpQuaternionVector.h	/^  inline double z() const {return r[2];}$/;"	f	class:vpQuaternionVector
~Calibrator	vision_visp/visp_camera_calibration/src/calibrator.cpp	/^  Calibrator::~Calibrator()$/;"	f	class:visp_camera_calibration::Calibrator
~Calibrator	vision_visp/visp_hand2eye_calibration/src/calibrator.cpp	/^  Calibrator::~Calibrator()$/;"	f	class:visp_hand2eye_calibration::Calibrator
~Camera	vision_visp/visp_camera_calibration/src/camera.cpp	/^Camera::~Camera()$/;"	f	class:visp_camera_calibration::Camera
~DoorHandleDetectionNode	door_handle_detection/src/door_handle_detection.cpp	/^DoorHandleDetectionNode::~DoorHandleDetectionNode()$/;"	f	class:DoorHandleDetectionNode
~Handle_manager	handle_tracking/src/object_scan.cpp	/^Handle_manager::~Handle_manager(){}$/;"	f	class:Handle_manager
~ImageProcessing	vision_visp/visp_camera_calibration/src/image_processing.cpp	/^ImageProcessing::~ImageProcessing()$/;"	f	class:visp_camera_calibration::ImageProcessing
~Keyboard	ros-keyboard/src/keyboard.cpp	/^keyboard::Keyboard::~Keyboard(void)$/;"	f	class:keyboard::Keyboard
~LogFileWriter	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/logfilewriter.hpp	/^    ~LogFileWriter(){$/;"	f	class:tracking::LogFileWriter
~TrackModel	vision_visp/visp_auto_tracker/flashcode_mbt/libauto_tracker/states.hpp	/^    ~TrackModel(){$/;"	f	class:tracking::TrackModel
~Tracker	vision_visp/visp_tracker/src/libvisp_tracker/tracker.cpp	/^  Tracker::~Tracker()$/;"	f	class:visp_tracker::Tracker
~TrackerClient	vision_visp/visp_tracker/src/libvisp_tracker/tracker-client.cpp	/^  TrackerClient::~TrackerClient()$/;"	f	class:visp_tracker::TrackerClient
~TrackerClientNodelet	vision_visp/visp_tracker/src/nodelets/client.cpp	/^    ~TrackerClientNodelet ()$/;"	f	class:visp_tracker::TrackerClientNodelet
~TrackerNodelet	vision_visp/visp_tracker/src/nodelets/tracker.cpp	/^    ~TrackerNodelet ()$/;"	f	class:visp_tracker::TrackerNodelet
~TrackerViewerNodelet	vision_visp/visp_tracker/src/nodelets/viewer.cpp	/^    ~TrackerViewerNodelet ()$/;"	f	class:visp_tracker::TrackerViewerNodelet
